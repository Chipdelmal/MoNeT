directory=outputFolder
)
network$oneRun()
network$reset()
}
###############################################################################################################
############################### POST-ANALYSIS #################################################################
# for(i in 1:repetitions){
#   splitOutput(directory=folderNames[[i]])
#   aggregateFemales(folderNames[[i]],driveCube$genotypesID,remove=FALSE)
# }
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# CRISPR in CPP for Software Paper
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(stringr)
library(MGDrivE)
###############################################################################################################
######################### SETUP PATHS #########################################################################
MGDrivE.Setup(stochasticityON=FALSE)
setwd("/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/")
#outputDirectory="/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/OUT_SoftwarePaper/ReplacementDeterministic/"
outputDirectory="/Users/sanchez.hmsc/odrive/MGDrivE_Experiments/SoftwarePaper/ReplacementDeterministic/"
###############################################################################################################
######################### SETUP SIMULATION ####################################################################
simulationTime=3000 # Number of "days" run in the simulation
repetitions=1       # Number of repetitions to run on each scenario (for stochastic version)
###############################################################################################################
######################### SETUP MOSQUITO BIOLOGY ##############################################################
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
###############################################################################################################
######################### SETUP LANDSCAPE #####################################################################
distancesMatrix=as.matrix(read.csv("./GeoLandscapes/ATaleOfTwoCitiesScaled_Distances.csv",sep=",",header=FALSE))
lifespanStayProbability=.90
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
movementKernel=calc_HurdleExpKernel(distancesMatrix,MGDrivE::kernels$exp_rat,pulseHeight)
sitesNumber=nrow(movementKernel)
patchPops=rep(50,sitesNumber)
###############################################################################################################
######################### SETUP GENE-DRIVE AND RELEASES #######################################################
genotypesNumber=10
#xiM=rep(genotypesNumber,.9180)
#xiF=rep(genotypesNumber,.9180)
sH=.25
sR=.25
sB=.50
eM=0.9
eF=0.5
driveCube=Cube_HomingDrive(
eM=eM,eF=eF,
rM=1/3*(1-eM), bM=2/3*(1-eM),
rF=1/3*(1-eF), bF=1/3*(1-eF),
s=c(
"WW"=1,
"WH"=1-sH,
"WR"=1-sR,
"WB"=1-sB,
"HH"=1-2*sH,
"HR"=1-sH-sR,
"HB"=1-sH-sB,
"RR"=1-2*sR,
"RB"=1-sR-sB,
"BB"=1-2*sB
),
eta=c(
"WW"=1,
"WH"=1-sH,
"WR"=1-sR,
"WB"=1-sB,
"HH"=1-2*sH,
"HR"=1-sH-sR,
"HB"=1-sH-sB,
"RR"=1-2*sR,
"RB"=1-sR-sB,
"BB"=1-2*sB
)
)
patchReleases=replicate(n=sitesNumber,expr={list(maleReleases=NULL,femaleReleases=NULL)},simplify=FALSE)
releasesParameters=list(
releasesStart=100,releasesNumber=2,releasesInterval=1000*(bioParameters$tEgg+bioParameters$tLarva+bioParameters$tPupa),
releaseProportion=2*round(mean(patchPops))
)
maleReleasesVector=generateReleaseVector(driveCube=driveCube,releasesParameters=releasesParameters,sex="M")
for(i in 6:6){patchReleases[[i]]$maleReleases=maleReleasesVector}
###############################################################################################################
################################ PREPARE THE FOLDERS ##########################################################
folderNames=list()
for(i in 1:repetitions){
folderName=paste0(outputDirectory,str_pad(i,4,"left","0"))
dir.create(folderName)
folderNames=c(folderNames,folderName)
}
###############################################################################################################
################################ RUN THE MODEL ################################################################
for(i in 1:repetitions){
outputFolder=folderNames[[i]]
netPar=Network.Parameters(
runID=i,simTime=simulationTime,nPatch=sitesNumber,
beta=bioParameters$betaK,muAd=bioParameters$muAd,popGrowth=bioParameters$popGrowth,
tEgg=bioParameters$tEgg,tLarva=bioParameters$tLarva,tPupa=bioParameters$tPupa,
AdPopEQ=patchPops
)
network=Network$new(
networkParameters=netPar,
driveCube=driveCube,
patchReleases=patchReleases,
migrationMale=movementKernel,
migrationFemale=movementKernel,
directory=outputFolder
)
network$oneRun()
network$reset()
}
###############################################################################################################
############################### POST-ANALYSIS #################################################################
for(i in 1:repetitions){
splitOutput(directory=folderNames[[i]])
aggregateFemales(folderNames[[i]],driveCube$genotypesID,remove=FALSE)
}
###############################################################################################################
############################### DEBUGGING #####################################################################
# Checking the distances between houses -----------------------------------------------------------------------
#diag(distancesMatrix)=100000
#apply(distancesMatrix,1,min)
#mean(apply(distancesMatrix,1,min))
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# CRISPR in CPP for Software Paper
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(stringr)
library(foreach)
library(doMC)
library(MGDrivE)
registerDoMC(4)
###############################################################################################################
######################### SETUP PATHS #########################################################################
MGDrivE.Setup(stochasticityON=TRUE)
setwd("/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/")
#outputDirectory="/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/OUT_SoftwarePaper/SuppressionStochastic/"
outputDirectory="/Users/sanchez.hmsc/odrive/MGDrivE_Experiments/SoftwarePaper/SuppressionStochastic/"
###############################################################################################################
######################### SETUP SIMULATION ####################################################################
simulationTime=5000 # Number of "days" run in the simulation
repetitions=1*4     # Number of repetitions to run on each scenario (for stochastic version)
###############################################################################################################
######################### SETUP MOSQUITO BIOLOGY ##############################################################
#bioParameters=list(betaK=8,tEgg=6,tLarva=11,tPupa=4,popGrowth=1.175,muAd=.09)
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
###############################################################################################################
######################### SETUP LANDSCAPE #####################################################################
distancesMatrix=as.matrix(read.csv("./GeoLandscapes/ATaleOfTwoCitiesScaled_Distances.csv",sep=",",header=FALSE))
#movementKernel=as.matrix(read.table("./GeoLandscapes/ATaleOfTwoCities_Kernel.csv",sep=",",header=TRUE))
#distancesMatrix=matrix(0)
lifespanStayProbability=.90
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
movementKernel=calc_HurdleExpKernel(distancesMatrix,MGDrivE::kernels$exp_rat,pulseHeight)
sitesNumber=nrow(movementKernel)
patchPops=rep(50,sitesNumber)
###############################################################################################################
######################### SETUP GENE-DRIVE AND RELEASES #######################################################
sHet=.9
eM=0.999
eF=0.999
driveCube=Cube_HomingDrive(
eM=eM,eF=eF,
rM=1/3*(1-eM), bM=2/3*(1-eM),
rF=1/3*(1-eF), bF=1/3*(1-eF),
s=c(
"WW"=1,
"WH"=1-sHet,
"WR"=1,
"WB"=1-sHet,
"HH"=0,
"HR"=1-sHet,
"HB"=0,
"RR"=1,
"RB"=1-sHet,
"BB"=0
)
)
patchReleases=replicate(n=sitesNumber,expr={list(maleReleases=NULL,femaleReleases=NULL)},simplify=FALSE)
releasesParameters=list(
releasesStart=100,releasesNumber=5,releasesInterval=2*(bioParameters$tEgg+bioParameters$tLarva+bioParameters$tPupa),
releaseProportion=2*round(mean(patchPops))
)
maleReleasesVector=generateReleaseVector(driveCube=driveCube,releasesParameters=releasesParameters,sex="M")
for(i in 6:6){patchReleases[[i]]$maleReleases=maleReleasesVector}
###############################################################################################################
################################ PREPARE THE FOLDERS ##########################################################
folderNames=list()
for(i in 1:repetitions){
folderName=paste0(outputDirectory,str_pad(i,4,"left","0"))
dir.create(folderName)
folderNames=c(folderNames,folderName)
}
###############################################################################################################
################################ RUN THE MODEL ################################################################
foreach(i=1:repetitions) %dopar% {
outputFolder=folderNames[[i]]
netPar=Network.Parameters(
runID=i,simTime=simulationTime,nPatch=sitesNumber,
beta=bioParameters$betaK,muAd=bioParameters$muAd,popGrowth=bioParameters$popGrowth,
tEgg=bioParameters$tEgg,tLarva=bioParameters$tLarva,tPupa=bioParameters$tPupa,
AdPopEQ=patchPops
)
network=Network$new(
networkParameters=netPar,
driveCube=driveCube,
patchReleases=patchReleases,
migrationMale=movementKernel,
migrationFemale=movementKernel,
directory=outputFolder
)
network$oneRun()
network$reset()
}
###############################################################################################################
############################### POST-ANALYSIS #################################################################
# for(i in 1:repetitions){
#   splitOutput(directory=folderNames[[i]])
#   aggregateFemales(folderNames[[i]],driveCube$genotypesID,remove=FALSE)
# }
for(i in 1:repetitions){
splitOutput(directory=folderNames[[i]])
aggregateFemales(folderNames[[i]],driveCube$genotypesID,remove=FALSE)
}
repetitions=2*12*4     # Number of repetitions to run on each scenario (for stochastic version)
repetitions
repetitions=100     # Number of repetitions to run on each scenario (for stochastic version)
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# CRISPR in CPP
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
# library(foreach)
# library(doMC)
library(stringr)
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user=="slwu89"){
dir = "/Users/slwu89/Desktop/git/MGDrivE/Main/"
setwd(dir)
outputDirectory="/Users/slwu89/Desktop/testout"
if(!dir.exists(outputDirectory)){
dir.create(outputDirectory)
} else {
eraseDirectory(outputDirectory)
}
}
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/")
outputDirectory="/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/OUT_ERACR_CPP/ERACRCornersStochastic/"
}
###############################################################################################################
######################### SETUP LANDSCAPE #####################################################################
rawGeoData=as.matrix(read.csv("./GeoLandscapes/YorkeysKnob_Coordinates.csv",sep=",",header=FALSE))
distancesMatrix=as.matrix(read.csv("./GeoLandscapes/YorkeysKnob_Distances.csv",sep=",",header=FALSE))
movementKernel=calc_ExpKernel(distancesMatrix,1/MGDrivE::kernels$exp_rate)
write.table(movementKernel,file="YorkeysKnob_Kernel.csv",row.names=FALSE,col.names=FALSE)
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# CRISPR in CPP
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
# library(foreach)
# library(doMC)
library(stringr)
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user=="slwu89"){
dir = "/Users/slwu89/Desktop/git/MGDrivE/Main/"
setwd(dir)
outputDirectory="/Users/slwu89/Desktop/testout"
if(!dir.exists(outputDirectory)){
dir.create(outputDirectory)
} else {
eraseDirectory(outputDirectory)
}
}
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/")
}
###############################################################################################################
######################### SETUP LANDSCAPE #####################################################################
placeLabel="Comoros"
rawGeoData=as.matrix(read.csv(paste0("./GeoLandscapes/",placeLabel,"_Coordinates.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
distancesMatrix=calc_haversine(latLongs)
write.table(distancesMatrix,file=paste0("./GeoLandscapes/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE)
movementKernel=calc_ExpKernel(distancesMatrix,1/MGDrivE::kernels$exp_rate)
write.table(movementKernel,file=paste0("./GeoLandscapes/",placeLabel,"_Kernel.csv"),row.names=FALSE,col.names=FALSE)
write.table(movementKernel,file=paste0("./GeoLandscapes/",placeLabel,"_Kernel.csv"),row.names=FALSE,col.names=FALSE,sep=",")
write.table(distancesMatrix,file=paste0("./GeoLandscapes/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
# library(foreach)
# library(doMC)
library(stringr)
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MGDrivE/Main/")
}
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="Comoros"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
###############################################################################################################
rawGeoData=as.matrix(read.csv(paste0("./GeoLandscapes/",placeLabel,"_Coordinates.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
distancesMatrix=calc_haversine(latLongs)
write.table(distancesMatrix,file=paste0("./GeoLandscapes/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
movementKernel=calc_HurdleExpKernel(distancesMatrix,MGDrivE::kernels$exp_rat,pulseHeight)
write.table(movementKernel,file=paste0("./GeoLandscapes/",placeLabel,"_Kernel.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
rows.sum
row.sum
sum.row
row.sums
rowSums(movementKernel)
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/Main/")
}
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
outputPath="./OSMnx/RoadsAndBuildingsParser/"
}
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="Comoros"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
###############################################################################################################
rawGeoData=as.matrix(read.csv(paste0(outputPath,"POINTS/",placeLabel,"_Coordinates.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
distancesMatrix=calc_haversine(latLongs)
write.table(distancesMatrix,file=paste0(outputPath,"POINTS/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
outputPath="./OSMnx/RoadsAndBuildingsParser/"
}
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="Comoros"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
###############################################################################################################
rawGeoData=as.matrix(read.csv(paste0(outputPath,"POINTS/",placeLabel,"_Coords.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
outputPath="./OSMnx/RoadsAndBuildingsParser/"
}
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="Comoros"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
###############################################################################################################
rawGeoData=as.matrix(read.csv(paste0(outputPath,"POINTS/",placeLabel,"_Coords.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
distancesMatrix=calc_haversine(latLongs)
write.table(distancesMatrix,file=paste0(outputPath,"POINTS/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
movementKernel=calc_HurdleExpKernel(distancesMatrix,MGDrivE::kernels$exp_rat,pulseHeight)
write.table(movementKernel,file=paste0(outputPath,"KERNELS/",placeLabel,placeLabel,"_Kernel.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator
# NEEDS MGDRIVE TO WORK!!!!
# Kernels parameters calculated by: Partow Imani
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
outputPath="./OSMnx/RoadsAndBuildingsParser/"
}
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="Berkeley"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
###############################################################################################################
rawGeoData=as.matrix(read.csv(paste0(outputPath,"POINTS/",placeLabel,"_Coords.csv"),sep=",",header=FALSE))
latLongs=as.matrix(rawGeoData)
distancesMatrix=calc_haversine(latLongs)
write.table(distancesMatrix,file=paste0(outputPath,"POINTS/",placeLabel,"_Distances.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
movementKernel=calc_HurdleExpKernel(distancesMatrix,MGDrivE::kernels$exp_rat,pulseHeight)
write.table(movementKernel,file=paste0(outputPath,"KERNELS/",placeLabel,placeLabel,"_Kernel.csv"),row.names=FALSE,col.names=FALSE,sep=",")
###############################################################################################################
