###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(stringr)
library(MGDrivE)
knitr::opts_chunk$set(echo = TRUE)
library(osmar)
library(sp)
###############################################################################
# functions from package that I want to work better.
merge_ways_nodes <- function(ways, nodes) {
colnames(ways) <- sprintf("w%s", colnames(ways))
colnames(nodes) <- sprintf("n%s", colnames(nodes))
m <- match(ways$wref, nodes$nid)
dat <- cbind(ways, nodes[m, ])
# dat <- na.omit(dat)
dat <- dat[!is.na(dat$nlat), ]
dat$nid <- NULL
colnames(dat) <- substring(colnames(dat), 2)
dat
}
plot_ways <- function(x, add = FALSE, xlab = "lon", ylab = "lat",main = "Location",
...) {
#stopifnot(is_osmar(x))
dat <- merge_ways_nodes(x$ways[[3]], x$nodes[[1]])
rlat <- range(dat$lat, na.rm = TRUE)
rlon <- range(dat$lon, na.rm = TRUE)
dat <- split(dat, dat$id)
if ( !add ) {
plot(1, type = "n", xlim = rlon, ylim = rlat,
xlab = xlab, ylab = ylab, main = main)
}
for ( coord in dat ) {
#if ( nrow(coord) >= 2 ) {
lines(coord[, c("lon", "lat")], ...)
#}
}
}
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
box(lwd = 2)
grid()
## close output to file
dev.off()
filename
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "filename.csv")
box(lwd = 2)
grid()
## close output to file
dev.off()
write.csv(bg_centroids, "filename.csv",col.names=FALSE,row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(osmar)
library(sp)
###############################################################################
# functions from package that I want to work better.
merge_ways_nodes <- function(ways, nodes) {
colnames(ways) <- sprintf("w%s", colnames(ways))
colnames(nodes) <- sprintf("n%s", colnames(nodes))
m <- match(ways$wref, nodes$nid)
dat <- cbind(ways, nodes[m, ])
# dat <- na.omit(dat)
dat <- dat[!is.na(dat$nlat), ]
dat$nid <- NULL
colnames(dat) <- substring(colnames(dat), 2)
dat
}
plot_ways <- function(x, add = FALSE, xlab = "lon", ylab = "lat",main = "Location",
...) {
#stopifnot(is_osmar(x))
dat <- merge_ways_nodes(x$ways[[3]], x$nodes[[1]])
rlat <- range(dat$lat, na.rm = TRUE)
rlon <- range(dat$lon, na.rm = TRUE)
dat <- split(dat, dat$id)
if ( !add ) {
plot(1, type = "n", xlim = rlon, ylim = rlat,
xlab = xlab, ylab = ylab, main = main)
}
for ( coord in dat ) {
#if ( nrow(coord) >= 2 ) {
lines(coord[, c("lon", "lat")], ...)
#}
}
}
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "filename.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "YorkeysAndTrinity.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "YorkeysAndTrinity_Coordinates.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "YorkeysKnob_03.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./Gordonvale.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "Gordonvale_01.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
invisible(rm(list=ls()));invisible(gc());
###############################################################################
###############################################################################
# 1) Download osm file for desired country/region/area
#    https://download.geofabrik.de/
# 2) find a place you want, then get the lat/longs for the corners.
#  I use https://www.latlong.net/ to search for things
#######################################
# Comoros Island, main
left <- 43.216570
bottom <- -11.977251
right <- 43.587359
top <- -11.366673
#######################################
# set boundary box
box <- osmar::corner_bbox(left = left, bottom = bottom, right = right, top = top)
# Import data, This does take awhile
OSMData <- get_osm(x = complete_file(), source = osmsource_file(file = "./map.osm"))
title <- "Comoros"
###############################################################################
###############################################################################
# subset roads
road_ids <- OSMData$ways$tags$id[ OSMData$ways$tags$k == "highway" ]
road_ids <- find_down(object = OSMData, ids = way(road_ids))
roads <- subset(x = OSMData, ids = road_ids)
# subset buildings
bg_ids <- OSMData$way$tags$id[ OSMData$ways$tags$k == "building" ]
bg_ids <- find_down(OSMData, way(bg_ids))
bg <- subset(OSMData, ids = bg_ids)
# convert to sp object, calculate centroids
bg_poly <- as_sp(bg, "polygons")
bg_centroids <- sp::coordinates(bg_poly)
###############################################################################
###############################################################################
# scale and setup output
#horiz <- (left - right) / (top - bottom)
png(paste0("./", gsub(pattern = " ", replacement = "_", x = title, fixed = TRUE), ".png"),
width=2304, height=2304, units="px")
# plot
par(las = 1, font.lab = 2, font.axis = 2, font.main = 2, cex.main = 4,
cex.lab = 3, cex.axis = 2, mar=c(7,8,5,2), mgp = c(5,1,0))
plot_ways(x = bg,  main = title, ylab = "Latitude", lwd=2,
xlab = "Longitude", col = "black")
plot_ways(x = roads, add = TRUE, col = "grey")
points(bg_centroids, col = "magenta", type = "p", pch = 16, cex = 0.5)
write.csv(bg_centroids, "Gordonvale_01.csv",col.names=FALSE,row.names=FALSE)
box(lwd = 2)
grid()
## close output to file
dev.off()
calculateZeroInflation=function(stayThroughLifespanProbability,adultMortality){
stayThroughLifespanProbability^(adultMortality)
}
calculateZeroInflation(.9,.1)
###############################################################################################################
# ______  __________________       _____       __________
# ___   |/  /_  ____/__  __ \_________(_)__   ____  ____/
# __  /|_/ /_  / __ __  / / /_  ___/_  /__ | / /_  __/
# _  /  / / / /_/ / _  /_/ /_  /   _  / __ |/ /_  /___
# /_/  /_/  \____/  /_____/ /_/    /_/  _____/ /_____/
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Kernels calculator: Works in tandem with SHPtoCSV.R
# Kernels parameters calculated by: Partow Imani
###############################################################################################################
######################### LOAD AND SETUP PACKAGES #############################################################
rm(list=ls());gc()
library(MGDrivE)
library(MGDrivEv2)
###############################################################################################################
######################### SETUP PATHS #########################################################################
user = system(command = "whoami",intern = TRUE)
if(user == "sanchez.hmsc"){
setwd("/Users/sanchez.hmsc/Documents/GitHub/MoNeT/")
outputPath="./OSMnx/"
}
outputFolderDistances="./DistancesAnalysis/"
outputFolderGeo="./OSMnx/"
###############################################################################################################
######################### SETUP LANDSCAPE AND BIOLOGY #########################################################
placeLabel="YorkeyTrinity"
bioParameters=list(betaK=2*10,tEgg=5,tLarva=6,tPupa=4,popGrowth=1.175,muAd=.09)
lifespanStayProbability=.90
###############################################################################################################
pulseHeight=lifespanStayProbability^(bioParameters$muAd)
pulseHeight
calculateZeroInflation(.9,bioParameters$muAd)
calculateZeroInflation=function(stayThroughLifespanProbability,adultMortality){
stayThroughLifespanProbability^(adultMortality)
}
calculateZeroInflation(.9,bioParameters$muAd)
