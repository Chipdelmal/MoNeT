(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    253971,       5060]
NotebookOptionsPosition[    250257,       4988]
NotebookOutlinePosition[    250635,       5005]
CellTagsIndexPosition[    250592,       5002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"hexToRGB", "=", 
   RowBox[{
    RowBox[{"RGBColor", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{
         RowBox[{"ToExpression", "@", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<#\>\"", "\[Rule]", "\"\<16^^\>\""}]}], "]"}]}], ",", 
         "256", ",", "3"}], "]"}], "/", "255."}], ")"}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"colors", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"hexToRGB", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<#f20060\>\"", ",", "\"\<#29339b\>\"", ",", "\"\<#c6d8ff\>\"", ",", 
     "\"\<#7fff3a\>\"", ",", "\"\<#7692ff\>\"", ",", "\"\<#ff16e3\>\""}], 
    "}"}]}]}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"388e5ea2-ba80-408f-b91a-ff646729086b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9490196078431372, 0., 0.3764705882352941], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6326797385620915, 0., 0.25098039215686274`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9490196078431372`", ",", "0.`", ",", "0.3764705882352941`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9490196078431372, 0., 0.3764705882352941]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9490196078431372, 0., 0.3764705882352941],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.10718954248366012`, 0.13333333333333336`, 0.40522875816993464`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.16078431372549018`", ",", "0.2`", ",", "0.6078431372549019`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7764705882352941, 0.8470588235294118, 1.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5176470588235295, 0.5647058823529412, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7764705882352941`", ",", "0.8470588235294118`", ",", "1.`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7764705882352941, 0.8470588235294118, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7764705882352941, 0.8470588235294118, 1.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4980392156862745, 1., 0.22745098039215686`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3320261437908497, 0.6666666666666667, 0.1516339869281046],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4980392156862745`", ",", "1.`", ",", "0.22745098039215686`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4980392156862745, 1., 0.22745098039215686`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4980392156862745, 1., 0.22745098039215686`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4627450980392157, 0.5725490196078431, 1.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3084967320261438, 0.38169934640522873`, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4627450980392157`", ",", "0.5725490196078431`", ",", "1.`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4627450980392157, 0.5725490196078431, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4627450980392157, 0.5725490196078431, 1.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.08627450980392157, 0.8901960784313725], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.05751633986928105, 0.5934640522875817],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "1.`", ",", "0.08627450980392157`", ",", "0.8901960784313725`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.08627450980392157, 0.8901960784313725]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.08627450980392157, 0.8901960784313725],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.763314005815887*^9, 3.763314040511632*^9, 
  3.763314592898295*^9, 3.763314850759469*^9, 3.763314968232213*^9, 
  3.763315185428615*^9, 3.7634084289073753`*^9, 3.763409161799984*^9, 
  3.763409519056705*^9, 3.763410008926982*^9, 3.763410069762485*^9, 
  3.763493599628396*^9, 3.7637338564597673`*^9, 3.7639101530065937`*^9, 
  3.763999081281589*^9, 3.7643406716228867`*^9, 3.764343647867599*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"6093397b-06be-4a69-a66f-18caf78ea820"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resistance", "Chapter",
 CellChangeTimes->{{3.763229141119348*^9, 
  3.763229148852076*^9}},ExpressionUUID->"86d3aff0-d1d2-442c-9995-\
ffda1a220a17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "\"\<./data/experimentsOutput.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "8", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "9", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "&"}], "/@", "rawData"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "r", ",", "s"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<R1\>\"", ",", "\"\<R2\>\"", ",", "\"\<R1 \[Intersection] R2\>\"", 
     ",", " ", "\"\<R1 \[Union] R2\>\"", ",", " ", "\"\<SS\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7620846720874987`*^9, 3.762084794781694*^9}, {
   3.762084825757217*^9, 3.7620849042008753`*^9}, {3.762084966728106*^9, 
   3.7620851640314693`*^9}, 3.762085238014865*^9, {3.762086339773513*^9, 
   3.7620863753679457`*^9}, {3.762086428157239*^9, 3.762086532366392*^9}, {
   3.7620865649208097`*^9, 3.762086582075178*^9}, {3.762086666672526*^9, 
   3.762086753438963*^9}, {3.762086808189774*^9, 3.7620868499129868`*^9}, {
   3.762086897137877*^9, 3.762086924857101*^9}, {3.7620869685618896`*^9, 
   3.762087004304215*^9}, {3.76208703599214*^9, 3.762087039791683*^9}, {
   3.762087099956362*^9, 3.7620871283298397`*^9}, {3.762087175009316*^9, 
   3.762087176310953*^9}, {3.762088308019452*^9, 3.762088308266437*^9}, {
   3.7620884429290237`*^9, 3.7620885089122343`*^9}, {3.762088579884767*^9, 
   3.7620887375710287`*^9}, {3.762088865581279*^9, 3.7620888776862307`*^9}, {
   3.7620889343356953`*^9, 3.762088956882306*^9}, {3.7620890243084784`*^9, 
   3.7620890510503407`*^9}, {3.7620891732433577`*^9, 3.762089203827976*^9}, {
   3.762089367791239*^9, 3.7620893678851223`*^9}, {3.76208948682493*^9, 
   3.7620895310505247`*^9}, {3.7620896285980864`*^9, 
   3.7620898960386963`*^9}, {3.7620989041171093`*^9, 3.762098905291648*^9}, 
   3.763313670116564*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"23e9824d-d266-4f86-bdf9-f1c7510345f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"steady", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"probe", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                 ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                 ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
           ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"probe", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"probe", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
          "Transpose"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"hSamples", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"steady", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
         "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lp1", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
             "None"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
             "None"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "60", "]"}]}], "\[IndentingNewLine]", ",", 
        
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"labels", "[", 
            RowBox[{"[", 
             RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotLegends", "\[Rule]", "None"}], 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
          "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", ",", 
           "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
           "\"\<tGDX Cross\>\""}], "}"}], "*)"}], "\[IndentingNewLine]", ",", 
        
        RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".25", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", ".015", "]"}], ",", 
              RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
           RowBox[{"If", "[", 
            RowBox[{"True", ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "6"}], "]"}], "]"}], ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", 
           RowBox[{"Thickness", "[", ".001", "]"}], ",", 
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
             "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lp2", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", "#", "}"}], "&"}], "/@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "<", "3"}], ",", 
           RowBox[{"steady", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"steady", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"3", ";;", "All"}], ",", "1"}], "]"}], "]"}]}], "]"}]}],
         "\[IndentingNewLine]", ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
        
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"labels", "[", 
            RowBox[{"[", 
             RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "[", ".025", "]"}], ",", 
              RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], "&"}], 
           "/@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "3"}], ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
             "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lp", "=", 
      RowBox[{"Show", "[", 
       RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<./images/00R_\>\"", "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       "lp", ",", 
       RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.762089771690798*^9, {3.762089886891747*^9, 3.7620899305472727`*^9}, {
   3.762089997950667*^9, 3.762090089575412*^9}, {3.762090176506977*^9, 
   3.7620901875158587`*^9}, {3.762090288702476*^9, 3.7620903216879787`*^9}, {
   3.762090372231647*^9, 3.762090444450017*^9}, {3.762090574675273*^9, 
   3.7620905747603893`*^9}, 3.763229243584796*^9, {3.763230223347825*^9, 
   3.7632302568201237`*^9}, {3.7632302912703648`*^9, 
   3.7632302914724617`*^9}, {3.763230476957548*^9, 3.763230477595916*^9}, {
   3.763231131858617*^9, 3.763231144967881*^9}, {3.763231212452032*^9, 
   3.76323121366852*^9}, {3.763231256767646*^9, 3.763231312479466*^9}, {
   3.763231358199018*^9, 3.763231367609524*^9}, {3.763231422331749*^9, 
   3.7632314635972433`*^9}, {3.763231537883032*^9, 3.7632316171843452`*^9}, 
   3.7632316877068253`*^9, {3.763231992648287*^9, 3.763232017106431*^9}, {
   3.763232358272702*^9, 3.763232358621014*^9}, {3.763232449755272*^9, 
   3.7632324502945337`*^9}, {3.763232551530349*^9, 3.7632325562519293`*^9}, {
   3.763232792909058*^9, 3.7632327932157173`*^9}, {3.763314034469702*^9, 
   3.763314046833396*^9}, {3.763314137688559*^9, 3.763314138464719*^9}, {
   3.763314590946196*^9, 3.763314591301186*^9}, {3.763314642158564*^9, 
   3.7633147903677053`*^9}, 3.763314905093688*^9, 3.763314950085442*^9, {
   3.7633150558550053`*^9, 3.7633150600353127`*^9}, 3.763315178774939*^9, 
   3.763409513569024*^9, {3.763410007564226*^9, 3.763410007650182*^9}, {
   3.763493281364505*^9, 3.7634932848174267`*^9}, {3.763493583199622*^9, 
   3.7634935897249193`*^9}, {3.763734300534541*^9, 3.763734313492648*^9}, {
   3.76373437032583*^9, 3.76373437053456*^9}, 3.7637478028371887`*^9, 
   3.763913123499317*^9, {3.76391320193012*^9, 3.7639132028106947`*^9}, {
   3.763913293292563*^9, 3.7639132938003387`*^9}, {3.763916446578726*^9, 
   3.763916464651873*^9}, {3.763916537688546*^9, 3.763916599019301*^9}, {
   3.763919653280821*^9, 3.763919672754551*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"7f6504ff-ba10-47fe-9224-ee765c8e1e6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"./images/00R_2.pdf\"\>", ",", "\<\"./images/00R_3.pdf\"\>", 
   ",", "\<\"./images/00R_4.pdf\"\>", ",", "\<\"./images/00R_5.pdf\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763314061023284*^9, 3.7633141516223803`*^9, 3.7633146140398483`*^9, {
   3.763314655841915*^9, 3.763314720594158*^9}, {3.763314766991239*^9, 
   3.763314799701247*^9}, {3.763314870218232*^9, 3.7633148916906652`*^9}, 
   3.7633149267050877`*^9, {3.763314959600758*^9, 3.763314986891549*^9}, 
   3.763315204222632*^9, 3.76340843917412*^9, 3.763409172151864*^9, 
   3.7634095265546417`*^9, 3.763410014513844*^9, 3.7634100756627817`*^9, {
   3.7634935980949173`*^9, 3.763493616371038*^9}, 3.763734331060173*^9, 
   3.763734376830562*^9, 3.763913140122011*^9, 3.76391623973208*^9, 
   3.7639165436400213`*^9, 3.763919678807403*^9, 3.764340686833221*^9, 
   3.764348210930668*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"c74e185f-9c29-4e9f-906c-8a56149b62dc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Resistance 2", "Chapter",
 CellChangeTimes->{{3.763229141119348*^9, 3.763229148852076*^9}, {
  3.763913093244821*^9, 
  3.763913094553422*^9}},ExpressionUUID->"4371b550-26dd-4de5-8361-\
87c628985fa7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "\"\<./data/experimentsOutput.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "8", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "9", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "&"}], "/@", "rawData"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "r", ",", "s"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<R1\>\"", ",", "\"\<R2\>\"", ",", "\"\<R1 \[Intersection] R2\>\"", 
     ",", " ", "\"\<R1 \[Union] R2\>\"", ",", " ", "\"\<SS\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7620846720874987`*^9, 3.762084794781694*^9}, {
   3.762084825757217*^9, 3.7620849042008753`*^9}, {3.762084966728106*^9, 
   3.7620851640314693`*^9}, 3.762085238014865*^9, {3.762086339773513*^9, 
   3.7620863753679457`*^9}, {3.762086428157239*^9, 3.762086532366392*^9}, {
   3.7620865649208097`*^9, 3.762086582075178*^9}, {3.762086666672526*^9, 
   3.762086753438963*^9}, {3.762086808189774*^9, 3.7620868499129868`*^9}, {
   3.762086897137877*^9, 3.762086924857101*^9}, {3.7620869685618896`*^9, 
   3.762087004304215*^9}, {3.76208703599214*^9, 3.762087039791683*^9}, {
   3.762087099956362*^9, 3.7620871283298397`*^9}, {3.762087175009316*^9, 
   3.762087176310953*^9}, {3.762088308019452*^9, 3.762088308266437*^9}, {
   3.7620884429290237`*^9, 3.7620885089122343`*^9}, {3.762088579884767*^9, 
   3.7620887375710287`*^9}, {3.762088865581279*^9, 3.7620888776862307`*^9}, {
   3.7620889343356953`*^9, 3.762088956882306*^9}, {3.7620890243084784`*^9, 
   3.7620890510503407`*^9}, {3.7620891732433577`*^9, 3.762089203827976*^9}, {
   3.762089367791239*^9, 3.7620893678851223`*^9}, {3.76208948682493*^9, 
   3.7620895310505247`*^9}, {3.7620896285980864`*^9, 
   3.7620898960386963`*^9}, {3.7620989041171093`*^9, 3.762098905291648*^9}, 
   3.763313670116564*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"0c2ed0c2-b2cc-4fc4-8aa9-84606d9dfbeb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"steady", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"probe", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
         "Transpose"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"hSamples", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
        "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"j", "<", "2"}], ",", 
         RowBox[{"steady", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "2"}], ",", 
            RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], ",", 
         RowBox[{"steady", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"3", ";;", "All"}], ",", 
            RowBox[{"2", ";;", "All"}]}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
            "None"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
            "None"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "60", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
         "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", ",", 
          "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
          "\"\<tGDX Cross\>\""}], "}"}], "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".25", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", ".015", "]"}], ",", 
             RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "<", "3"}], ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", ".001", "]"}], ",", 
          RowBox[{"Opacity", "[", ".5", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "<", "3"}], ",", 
          RowBox[{"steady", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"steady", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"3", ";;", "All"}], ",", "1"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", ".025", "]"}], ",", 
             RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "<", "3"}], ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<./images/00R_\>\"", "<>", 
       RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", "lp",
       ",", 
      RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "2", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.762089771690798*^9, {3.762089886891747*^9, 3.7620899305472727`*^9}, {
   3.762089997950667*^9, 3.762090089575412*^9}, {3.762090176506977*^9, 
   3.7620901875158587`*^9}, {3.762090288702476*^9, 3.7620903216879787`*^9}, {
   3.762090372231647*^9, 3.762090444450017*^9}, {3.762090574675273*^9, 
   3.7620905747603893`*^9}, 3.763229243584796*^9, {3.763230223347825*^9, 
   3.7632302568201237`*^9}, {3.7632302912703648`*^9, 
   3.7632302914724617`*^9}, {3.763230476957548*^9, 3.763230477595916*^9}, {
   3.763231131858617*^9, 3.763231144967881*^9}, {3.763231212452032*^9, 
   3.76323121366852*^9}, {3.763231256767646*^9, 3.763231312479466*^9}, {
   3.763231358199018*^9, 3.763231367609524*^9}, {3.763231422331749*^9, 
   3.7632314635972433`*^9}, {3.763231537883032*^9, 3.7632316171843452`*^9}, 
   3.7632316877068253`*^9, {3.763231992648287*^9, 3.763232017106431*^9}, {
   3.763232358272702*^9, 3.763232358621014*^9}, {3.763232449755272*^9, 
   3.7632324502945337`*^9}, {3.763232551530349*^9, 3.7632325562519293`*^9}, {
   3.763232792909058*^9, 3.7632327932157173`*^9}, {3.763314034469702*^9, 
   3.763314046833396*^9}, {3.763314137688559*^9, 3.763314138464719*^9}, {
   3.763314590946196*^9, 3.763314591301186*^9}, {3.763314642158564*^9, 
   3.7633147903677053`*^9}, 3.763314905093688*^9, 3.763314950085442*^9, {
   3.7633150558550053`*^9, 3.7633150600353127`*^9}, 3.763315178774939*^9, 
   3.763409513569024*^9, {3.763410007564226*^9, 3.763410007650182*^9}, {
   3.763493281364505*^9, 3.7634932848174267`*^9}, {3.763493583199622*^9, 
   3.7634935897249193`*^9}, {3.763734300534541*^9, 3.763734313492648*^9}, {
   3.76373437032583*^9, 3.76373437053456*^9}, 3.7637478028371887`*^9, 
   3.763920365498296*^9, {3.763920397892496*^9, 3.763920421028162*^9}, {
   3.763920474145441*^9, 3.763920478572817*^9}, {3.764341087095042*^9, 
   3.764341128979821*^9}, {3.7643482307922153`*^9, 3.764348256144944*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"990e4515-6e10-42d7-99d3-1a9146a68259"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"./images/00R_2.pdf\"\>", ",", "\<\"./images/00R_3.pdf\"\>", 
   ",", "\<\"./images/00R_4.pdf\"\>", ",", "\<\"./images/00R_5.pdf\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763314061023284*^9, 3.7633141516223803`*^9, 3.7633146140398483`*^9, {
   3.763314655841915*^9, 3.763314720594158*^9}, {3.763314766991239*^9, 
   3.763314799701247*^9}, {3.763314870218232*^9, 3.7633148916906652`*^9}, 
   3.7633149267050877`*^9, {3.763314959600758*^9, 3.763314986891549*^9}, 
   3.763315204222632*^9, 3.76340843917412*^9, 3.763409172151864*^9, 
   3.7634095265546417`*^9, 3.763410014513844*^9, 3.7634100756627817`*^9, {
   3.7634935980949173`*^9, 3.763493616371038*^9}, 3.763734331060173*^9, 
   3.763734376830562*^9, 3.7639197942558937`*^9, 3.7639203498323193`*^9, 
   3.7639204049987*^9, 3.76392043558286*^9, 3.763920485687612*^9, {
   3.764341109088477*^9, 3.764341137405863*^9}, 3.764343792242414*^9, {
   3.764348246488043*^9, 3.7643482653601427`*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"2d814c8c-2ceb-45d9-8d21-5242e219f680"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Homing", "Chapter",
 CellChangeTimes->{{3.763229150793192*^9, 
  3.763229153800992*^9}},ExpressionUUID->"13ec63fd-048d-4469-a0a1-\
6dc5392ae229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "\"\<./data/experimentsOutputH.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "//", "Round"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "8", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "9", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "&"}], "/@", "rawData"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "r", ",", "s"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<H\>\"", ",", "\"\<G\>\"", ",", "\"\<C \[Intersection] G\>\"", ",", 
     " ", "\"\<C \[Union] G\>\"", ",", " ", "\"\<SS\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7632291962662573`*^9, 3.763229210216586*^9}, {
  3.763409656174939*^9, 3.763409658405511*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"b7dafa76-bb3e-4439-a44d-24526d1b687b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"indices", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"steady", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"probe", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"data", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                  ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                  ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
            ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"probe", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"probe", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
           "Transpose"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "indices"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"hSamples", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"steady", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
          "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lp1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "3"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", "2"}], ",", 
                RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"3", ";;", "All"}], ",", 
                RowBox[{"2", ";;", "All"}]}], "]"}], "]"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
           RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
                "None"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
                "None"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "60", "]"}]}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"GridLines", "\[Rule]", "Automatic"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
           
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"labels", "[", 
               RowBox[{"[", 
                RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"PlotLegends", "\[Rule]", "None"}], 
           RowBox[{"(*", 
            RowBox[{"{", 
             RowBox[{
             "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", 
              ",", "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
              "\"\<tGDX Cross\>\""}], "}"}], "*)"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{".5", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".015", "]"}], ",", 
                 RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], 
               "&"}], "/@", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"j", "<", "3"}], ",", 
                RowBox[{"colors", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
                RowBox[{"colors", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Prolog", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Thickness", "[", ".001", "]"}], ",", 
              RowBox[{"Opacity", "[", ".5", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], 
               "/@", "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", "lp2"}], "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "#", "}"}], "&"}], "/@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "3"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"3", ";;", "All"}], ",", "1"}], "]"}], "]"}]}], 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"GridLines", "\[Rule]", "Automatic"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
          
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"labels", "[", 
              RowBox[{"[", 
               RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", ".025", "]"}], ",", 
                RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], 
              "&"}], "/@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "<", "3"}], ",", 
               RowBox[{"colors", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
               RowBox[{"colors", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Prolog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
               "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
     
     RowBox[{"(*", 
      RowBox[{";", "\[IndentingNewLine]", 
       RowBox[{"lp", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<./images/00H_\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
         "lp", ",", 
         RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "*)"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", "5"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.763229237224081*^9, 3.763229239046632*^9}, {
   3.763230551728322*^9, 3.763230555761197*^9}, 3.763231734328856*^9, {
   3.7632318385591307`*^9, 3.763231859670607*^9}, {3.763231984389113*^9, 
   3.763231985239208*^9}, {3.7632324776938477`*^9, 3.7632324781913958`*^9}, {
   3.763232533818709*^9, 3.763232546984*^9}, {3.7632326697164783`*^9, 
   3.763232670527154*^9}, {3.763232798534575*^9, 3.76323279886753*^9}, {
   3.76331403860649*^9, 3.763314044411111*^9}, {3.763314111184657*^9, 
   3.763314113573112*^9}, {3.7633148124472237`*^9, 3.763314832739305*^9}, 
   3.7633149086949177`*^9, 3.763314943212035*^9, {3.763315031794198*^9, 
   3.763315032361059*^9}, {3.7633151107331533`*^9, 3.7633151465750647`*^9}, 
   3.76331518321103*^9, 3.763409517672372*^9, {3.763410001046365*^9, 
   3.763410001450139*^9}, {3.763493636050695*^9, 3.763493636152061*^9}, {
   3.763493673500537*^9, 3.763493747440751*^9}, {3.763733667693839*^9, 
   3.7637337123507223`*^9}, 3.763733849733262*^9, {3.7637339264940968`*^9, 
   3.763733926767267*^9}, 3.7637341287089453`*^9, {3.763734159124658*^9, 
   3.763734159250945*^9}, {3.763734648124476*^9, 3.763734648196972*^9}, {
   3.763747500860096*^9, 3.763747508068796*^9}, 3.763747809900234*^9, {
   3.7637479186198597`*^9, 3.763747921868088*^9}, {3.7637479521261683`*^9, 
   3.763747990970234*^9}, {3.763748346507923*^9, 3.763748357342044*^9}, {
   3.763748820938054*^9, 3.763748821295985*^9}, {3.763748964517839*^9, 
   3.763748979086707*^9}, 3.763749023077475*^9, {3.763910206905528*^9, 
   3.763910209420878*^9}, {3.763910271860808*^9, 3.763910298132162*^9}, {
   3.7639107493186827`*^9, 3.763910811710599*^9}, {3.763910852428331*^9, 
   3.76391089641341*^9}, {3.763911605344524*^9, 3.763911622235528*^9}, {
   3.763911691984191*^9, 3.763911701994669*^9}, {3.763911742590968*^9, 
   3.763911802387344*^9}, {3.763911838583452*^9, 3.763911854468854*^9}, {
   3.763911910554893*^9, 3.7639120219323397`*^9}, {3.7639120841278877`*^9, 
   3.763912084318735*^9}, {3.763912331431795*^9, 3.763912349589396*^9}, {
   3.7643413369698257`*^9, 3.764341373396571*^9}, {3.764343984564233*^9, 
   3.764344040491765*^9}, {3.764344076414405*^9, 3.764344094120474*^9}, {
   3.7643446861405907`*^9, 
   3.764344712716679*^9}},ExpressionUUID->"cd08a318-1f1a-4220-9f4e-\
7b16fdce0b1c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exp", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"out", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"out", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<./images/00H.pdf\>\"", ",", "exp", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.763910292025559*^9, 3.763910337241082*^9}, {
  3.7639105017759027`*^9, 3.763910502039341*^9}, {3.763910930029991*^9, 
  3.763910935975984*^9}, {3.763912354194745*^9, 3.763912356552494*^9}, {
  3.764341341038453*^9, 3.7643413464283648`*^9}, {3.764344048774332*^9, 
  3.764344049088171*^9}, {3.764344108891769*^9, 3.764344109266416*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"13226482-fec7-4c00-bc2d-8cf2c56e6fa9"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.9490196078431372, 0., 0.3764705882352941], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.5071677892040607}, {0.7, 0.7047301899946663}, {0.9, 
       0.9001595701017284}, {0.95, 0.9498846687063772}, {0.99, 
       0.9904684988685339}, {1., 1.}}]}, 
     {RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.378973283980208}, {0.7, 0.5259850190854934}, {0.9, 
       0.6759893219220542}, {0.95, 0.7139937894420514}, {0.99, 
       0.7422507589824623}, {1., 
       0.7497238363673047}}]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.7764705882352941, 0.8470588235294118, 1.], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.7574183315652223}, {0.7, 0.9120792178397221}, {0.9, 
       0.9900955899855398}, {0.95, 0.997428638927972}, {0.99, 
       0.9999014588164782}, {1., 1.}}]}, 
     {RGBColor[0.4980392156862745, 1., 0.22745098039215686`], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.6150663381565553}, {0.7, 0.7759385676244526}, {0.9, 
       0.8945776093840673}, {0.95, 0.9173119411955644}, {0.99, 
       0.9338135549607771}, {1., 0.9376690764092573}}]}, 
     {RGBColor[0.4627450980392157, 0.5725490196078431, 1.], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.7598180310039186}, {0.7, 0.9130544486638364}, {0.9, 
       0.9896671630904241}, {0.95, 0.9975192866076795}, {0.99, 
       0.9998936223983566}, {1., 1.}}]}, 
     {RGBColor[1., 0.08627450980392157, 0.8901960784313725], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.6140979134230247}, {0.7, 0.7717550919467883}, {0.9, 
       0.8937429608312265}, {0.95, 0.9173070541435772}, {0.99, 
       0.9334860270295383}, {1., 0.9375315213709886}}]}}, {}, {}, {}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5025, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Thickness[Large],
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm]}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm]}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm]}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm]}, {1, 
       FormBox["\"1.0\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm]}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm]}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm]}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm]}, {1, 
       FormBox["\"1.0\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive[60],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->750,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"H\"", 100, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.5, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Dashing[{Small, Small}], 
    Thickness[0.001], 
    Opacity[0.5], {
     LineBox[
      NCache[{{
         Rational[31, 100], 0}, {
         Rational[31, 100], 1500}}, {{0.31, 0}, {0.31, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[1, 2], 0}, {
         Rational[1, 2], 1500}}, {{0.5, 0}, {0.5, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[7, 10], 0}, {
         Rational[7, 10], 1500}}, {{0.7, 0}, {0.7, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[9, 10], 0}, {
         Rational[9, 10], 1500}}, {{0.9, 0}, {0.9, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[19, 20], 0}, {
         Rational[19, 20], 1500}}, {{0.95, 0}, {0.95, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[99, 100], 0}, {
         Rational[99, 100], 1500}}, {{0.99, 0}, {0.99, 1500}}]], 
     LineBox[{{1, 0}, {1, 1500}}]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7643413471461*^9, 3.7643413811955023`*^9, 3.764343707314969*^9, {
   3.764344004629209*^9, 3.764344015330132*^9}, 3.764344049328557*^9, {
   3.764344083302938*^9, 3.764344109615094*^9}},
 CellLabel->"Out[55]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsnQeYVMeR+OfPkpGQfXe2Tz7f2Xc+39lnW7Zs2T5bsrJQsKJl5QiSUEQZ
ZaGcc04oIpBETiIICUQUOWcQObMg4ubd+vevX9ebnrc9O7PLknzwfSzM255+
3ZWrurrqlNa3XnVFu9a3Xn1Z6x8df3PrG6+6+rJbftTqhpvNo4L/l0o12JhK
FZzwoxT/l1RKf6T/bOKH/+Tv8MFA+08jKS8vl61bt8qmTZukqKhIqqqqUgfZ
3zWUkpIS+3zLli38f7j7ihki27dvt7/atm0bU6R+6X5XUVFhn+nvzOfUNve7
ysrK+Hd833xOHRCtpp/9Zz/7xnnz5kn37t3l6aefloceekjuvvtuufPOO+W+
++6TRx99VN5//3356quvZPPmzd+yXyuQtWvXyuzZs2XOnDmpBvZngf28YsUK
O+IANz3jRo0aJW+88YY8/vjj8sADD9ip77rrLrn//vvl2WeflZ49e8r8+fPZ
1Wf2ay3sNEOGDJGXXnrJrqBDhw5yxx13yL333isPPvigvPbaa/LZZ5/JypUr
U7okNmoW4hYT/XTT2hH7u58AY/r06Rk7Zl6dn88879atm0ybNk2++eab1Jfe
O0Lb5nn6HQUW8IsWLeJ38VoYZyBoR7R04GFtjOvbt68FxcMPPyz33HOPBRF7
fuSRR+Ttt9+WESNGSGFh4X4R7vo4aoEsJkyYYCHStm3bBtK6detUc2nTpo1c
dtll8V8+m9/Yf9kkLzOE19KttXPnznLBBRfYL0dTFNjPL774Ysaeli9fLm++
+abceOON0bgGzFjAK6KvNWQR8sQTT8jEiRNZ3AD7zcb2m6+++qpcd911cuml
l+pi7FfNr3V9/Kpdu3by1ltvyerVq3V94Ipf++u75JJL7GwbNmxI7eegYf4v
ffr0sVuM19QoBI2Urpff3X777dKrVy/AO9S9ccaMGXLxxRdXgwjU4EMErEPI
Zqz5FI278MILLcH742bNmiVPPvmkXHXVVancyyqQW265RT755BOoxaDTory3
42gEB0i4/PLL7RRXXHFFqhlwN7thGgD12GOPwUD69o8++siClkEN7E+7Vnnl
lVcct0VTl5WVSb9+/eSGG26w480r3NSNeI19Ha+FHo18SvV3cB88eLBcf/31
dk4zTlfDUKa5+eabER77e7CFTPzVMNRQlcVmCzfruHHj5LbbbrNTmI218PbI
o1tvvVXGjBnzhZt15syZ9lf+rAyDdpIYg68gvAIPFqNHj86ARWlpqYWbwZju
K5XcGLJi7ty5zSIE9XLrBkFwMhRqvtXQAVBxo3zIhA29BcDwS5YsccScG2nN
PYUBvziE6euUPPSV7LehWz+4ZDhy1RB9X/dGpAKrBO3+NP6q07+zvCtXXnml
DBs2LF51LuQ2c6tGPCL1GWvmaWSHNs4QVh6gGnq4Z/EIbqPlhtQz7hWk4L5j
x452jlpgkD2apaSaRvTQ072V2V544QVmc8Ob6tftap5//nkraZH8V199NVP5
szIEBdQiT7po5sYVFxfbZ+nXNot3gHgB+SjX5557ziocRzDxjngHktxYDU72
FFhGdzhwAGwWUwis+tRTT8nLL79sRR1cr4xT4FECFDN16tR4P/lRTIH07t07
MV8LC0L3zO6B97JnQIpKvOaaa6qtQYm/R48eqfomIF0r1P3BBx+kYd/AfqWJ
tauQDQAeIY2ySy4Q2gBBRoCbb2SQUv/+/WPcFzie4OvYVQam6PQGTn5hV3z9
9ddWVWSiLNoaz7E7m7upu3TpYjUeDN7A/ox0LOj0twbr8Ty9hEiTIb4GDBgg
69evtwaorgNpOHnyZEtuyjT+Oj788EM7UrfImq+99lq3gmiLCpHPP/8ckihw
bLpu3ToLEYBotqizsltUupFs8e5AJETl745Z0VoQWVM3DkRCIOlVNorF3Ouv
v27nMTtKFXhawght+fjjj+0yYCCf0HinsdxSn9WB0CDoyBpIY0PtimbeejOx
GxEEdvvYsWPR0ooIaBIzDIDDb2kARzQM7xhdYoSwJbke7g3GDLP2gD8cyOER
GHJzwyNLFHudqc1qfCCo0aSLxtYCWAalBgj8LLCIePfdd+0IRQamOxzskwwr
RZhu3LjRMUck6Tp16lQN+KhuDG/dChCA+SKgpreCR7Js2bJ4Pt7rTMgMUsVM
9vdhVL8lS38fN910kzULkNg6n/m/lY7+fCANC2b8+PHxfAsWLLDSxd8H45Ck
EOngWhIR/h5YxVwv8OCMw+DDGVcTIzYp1RBSxlWK94FBBt6SlGP0v6OxDMpB
ooQUFZ4bEkK3/emnn1bbDmhB+RiLNB4HT+BMGrY3n6KfzpuyIxp7+haB6KNZ
3wuB+0L6vffeqzYO5YGb3N2THSoTGiRkzKpVq+L5Fi5cGHNKA48MkWaQl47D
ykZK+vswssqux98HkjYJP1WMxmOMFSgwSaKP7yGTGDGolmQDJxv2sitr6NaH
kalwVnIYNGiQhVcSv+DN4CpDRjmpkAE/dCGy1JGNghtugTN8MLJttgg1qkgH
XCin2O90HKnL/K4bh+sVQh8cmXY3CqyiQmz63Ic5hnPOiK4eeFAF6HYfzWxx
ypQp8XxwRQjcBBX89UHWkJLPVXzvyy+jkINa1gQPkGhJcgBWOGP5ovlfPamJ
jRS5nZnkRVBF94HUC6HZ+F5O9GegD2wnh8PN6AaJ/atI2AFeHy18D45kxPfc
OAR7kgvY3vDhwzPAw3t5TzZwK/qIEbBF/718D67HHtL1IUVC4EExQN3f9cDt
0J8xH9Y8QbqWjmcgGQcX5QY7HyRTW9QR40q+k3FEDHwYIxlQSD4rsQZMfiRc
Buqa2Ahdcol8HUNKwQzXIVx9sCgzYw4oWNApStVJ8OFR+IYOnOiPA3wYxwh/
RRvUlgQNn5UK93N7IHyR3AP/4pfp2ozlH1RMeDeM0LDTpEmTqoEZI4zvM2Jg
rdDWxAr05NqchHHwqI4D5UiDSkVXN/da1LuaKf42MI+gZAUxIMl0GiIrWwXl
P7lxmGm8LhtHKiUTx3OcFm8DvYfJ09WN4TvunfEYTA+j9+J1YTcnJQDfIYLH
iO+4ud55551qc2EWArYDPK7GNEmuHS++Nqj6gRtHSD1J5moqGskQ7wHyCwlH
NbEKMlGGLlGL1h+ObyueCsYnTuosXk/AOw2ayB9XZ8znMkL1PiXjJSXH4dI4
Mkh97MbhNBJw9kkKcPEMgaHrQ3egj5Nci3UN6SlJoSuxIqMwanp9SBUseEUf
pIwDmZwPQVUX9GFOYZknBR+BSx/O+EOYZ0l8EGMJoA+whiwy/Ft/2pDc5XvK
SYo+KFupRzmTkxjlTJ0PXZdEH+RhdEcG+jjXgBOT2yEU4c8HWog4JdGCwMZC
VvSpw5TUgZgcCHEffSiAJPpwPiCH2qIPGPCeJFfh//v7QHngbCUlIGsOoA/B
kkQfXKAnVjotqp/tJKd95plnrOPiUzdHRb7hjYW2Zs2aDO6DbJJCgu3hoPvo
w4FICkTQjqHtC2A8eEcOsUBE+OGMqNB0lnE1PYIuV7SFyAW0acintmgbOXJk
0PTTcbp+ooT+2pgbvxf7IQNlTaz8Tm4DdzgtPJpYKvP1kU4HhSqqMEfUqfBR
RXTDR1U2TuM4y0cVqEuaBrxXUapbJSKWVPmQnHFKYlQR9kjqN/5ljKJKnZgk
CjQkUTtUNbEhmOS6UEwcQBxQA+wRqpFHmIEmMJpEAYyJoazTJQ1gFST4dIom
OAcq9U8ZfJ/ON2kyg5CZ4z5y7xw4cGAQ/FiDClpCaklhw/rHjx9vR+ja0L0h
B0ONbv8wNckFjIM76oIqdFaIBQysYth27dq12j417JBAFUfu7rX2L1siNotV
o9N5W8igDqw3BQeqUy0uP5gGyH1woGeSYPOF7sfunRjVSaGWtPKwUNsmjgr4
jgagdG0hy1LNDqhXycgIzGoCUC1VIxny9ssUVU6nZrABZg0krnvwSDKD3Ag6
MiIK18Z+D7pIgzu+TCU9IZ3LkenTKDoM9mOO+Ac3TsPryZgqKtO38IjCJC0o
NREI2nzithzSRRzLE0HQtaHOEbZJvUbgz0cbRjf7SsZn0Ue40urWEoxCF/uR
GvaO78SI2qINBZJEG9LLN3EgsZChz6lLAG0Ek5Lur/pmjNBpqx/oZPpmijY8
fgWhCka4iOeMUPc8W0yOQzEsMUVbyKdS/0zXtnjx4qA5os6KWrHKlUlJgLVr
HIU4DghMUAI+2iApyAVBlW94+188cnGnSkEfTfeRy0dLoA6rKBmRYLhaRQd4
oE7qIN94V9T54WP/5JwAEfpRqRphlDRReO8XX0QpDoo6Du6SqEOIEcvUtSGc
k36mO/O0IzQSgqBPkh/vRJ9zcqKHO/iFODlYu+b3/iELWxkyZEjeJ1yKPaLg
gCCJPV4Bs+tWUMMh7KmLm8Aecqt9+/Y5sYc2Dxl6GFqM+EePuBV7jbz5OEzA
XlXiJmCuAQM/iov4JzqrgRGwl1StWDy+N2xkZxB7aml812EF3YDMc5kfeigO
FOFbkEhKB8c2bAOIEQ3FmXfZPCk9M3RpH9YuNHKitshkJSAuhEw8Jt0ZZnQI
mWob5YlMTXXIhUyW7yNTUw3Skqqxmn72rx6DGgmshxwIWASKf8oABDDsGaF4
DcVONSimy4TDQ3jVg5oo5B0dKoMIxmoalr8tlyATHfV6ySS+hcj30N8jRoz4
vJ6QCbf6yCQ8GkImmYoBZHJUV1u56u9aVZ0ik/MQVKAPTT5nBl4idsDigfNw
z4jBYXzyL6qBcCbs4ue+KCHA4Wo4a45VXeSuHkIc6MahWlGPd9xxh1HdEQsy
H+FcuNwYqfnmtdWXPNUUlgTWCLGwqlyGDLZcUpM4k9aOUG3IsU8mhBparHE8
hGBqTVIpj5vFyT38xfbBPtFsvGT6FZ8hLqx2Pc4I+dVJGydbDJrUNEZ8343D
MWXLjGvh2S6YoYRdNG+0NrYLRxy5bJdQ6IjPGmdIYIu4LBonl7fA9pLYgiaT
2IJPAFkaPFFGIKYTWop3xTlOlk0be4vEbzGi1CUENNGMqGq+AolOujJoJuQr
4PEz4p/tz4YWgMhgVufl/mgyWgTXSMPxOdPBj/Qd3ivTGu7IV0Sqx8ARdyje
4XsMnN+GUKfB4gTqiLVy/JxEXaZvHmVVJKcFYMScffHIiQhhgjTjNvXPYW0G
grPGNQOtKcMUapCMBjIVgYQZQj46SNb1ASoY2l8f39HY7fccAjEpySFy2FFp
rUwPMxP54GuIJqxgnBaea8KcIlORjkQ10+ab1KfI5JAh6f4h8nzVzUFLCJmq
lBwyVVeEQpKkc/nxMPRJ0mLQdDT1iFHFmeciTX19Yv9AONhPiBNDCAWRCDVv
1xR3wANloZfNhL3c+0OxMf41RlKG+AkF4jUNTQ/pmcsly8ZY0fkgGmPdNnJ4
x6bD4GmbmSfGtzV0pNmmSDOVSGqP5YvUUPASy8CPmuENhSAAOSeiZqHT+8xD
rCaWY3yk80qQR7gk8pUbVyMMlm4IITrZbWGlGqcAWH9YlJjwJCHgWRBcApbY
PciZPg4iofglr8g8A2xo7Srv1Q2cFewCGHaQevRqqvkHG+xYeVgTx+CKUGoN
NjsxL82IZ1tsB343Gre2uAxFNxF5RmPFwPeO0mLgY52hnBPHQDBP6BjIhcvi
EBgSCqZNSmSQgUWl8XuXQxa/WqU26QsKKUJWHBfxqb97huxIGrBISnUt9AyB
w8ik1MWgJVavDOidM2QwKmBhhCZNeUInA+TKej0dnWpshbssSHiM56VLlzaq
FeYKrNROBn/9qJluETMqKYKxHvCcE9iD3ENnsBrNUexxBJyp/6IlwslpWm8i
Q4cOrWaUqEM+zM2Fcx/KLtCEVf9cFd80ea7KOtjKd71x5Bv541SXEgnTkBAU
mXQn/GPxno4bvWyFOL0dw4rwTpwvnT/WkDDJcWxXzyH9LICQyYImwtpMYI4D
miS9M60GpXTaEF8wLbFSX0oxX9JUBNp6Vqc2OUpUk/Z9KYVghY/1vfBo8jSZ
cbqd73rj3ClKxjg8LcYp9jSZIpkqxTt4r2a8V881aRpjkRgy5o+THYrCghqw
h9GWabNHYIaFfTATjQiNQ0hHIzKwh04IxWKSBwfEYpL86bvvir1sjqVm7GhC
FNDBacRdZ8nYtXrJVbVzKCQKv5I0pevKFlRDuTDCT1xDsyfBonJDE81CB+zw
OXrPxyw+eeIaSEM7GS8iXpwDnaFoDFQE4xFd1/1li8aoX+/Qqc6xdyyXIfbI
D1DQI2ZCVixRke+5McnTSZ0nDfomKA7rZMOs/A7TAtQTNlbyCmXL8m61NBXs
uC/Jdbd1h+Xf81CYTPH0UagMClPh1CfFNXEzjLYIjdHdaxQk3KJWrt5I4zMo
Jv6RMGeT6X+hU1XknDH4YlCpR5Q0W6NcbA+DBb7iyoCYGmm6S2JSKIMk4evF
G4UafmnI1tcUAz1iUgaP5otOK/is+crq0JJakVSaoURbmMT50xlYIAMHAtf1
cVHe3VPLYASg74tdxiWzdzR/HKEReRcNrUDAPHKxv+SlxrZeaCSUg4sJE1KS
yRxc//KHPw4GBAwJrGK2JFPHeA0KB77TaTE9kuzun18o1FBWSeWnpoZRoPF8
hA9DuUzwro/VUEafErI/H+ZYKGElM9YdYV/Pcv35NC+2hQfu5Hyt3R0VRvR1
WEWian7RFZnXkNomMgdCWCWTLQkuTVRBNOpyOFepKfbtsHqA+wBNQgicLRqa
Psh7jG2JbjWIuspN7iXPZnCOBiX1zAnZGMoSxcnE+dBoM5IilHIANyFY1DnI
JoPhMEJQSqOompDHiaGEZ6rrQ11jwCRpTw98D8wBTHDrXxQCXJqd6rOmpn/0
c2CF5lHrTmc1CeD739yUfm60/2rUGkJFX83Jkd5KTIIQy97dYWnhJCU3Ezlb
QOOwYkgKSGhRByiUbHAsbWMKargF5udNpCc1sD+jN+sVlGRJDQ4hQ9MTicCq
xuYyALzcTU80V+9vNUgwhqGR2FnliAAc+SfRjFOvTfGG/a+miX/wj2FN/ofO
h2ZBd/rz+U6n0hUGczL/A2QQOkD2adwAutKrGaGrpLo+X/P560MGYYD79wed
YxyPA7nYARwWDHDjOEjFxOO9jWsgKrg8eX+Q+YjqQFT+2SKCJXnvDn4Vie/T
NfOmRbsY9ZDSOhFaQyJCKRNFt3GdgrYsyQ0TPxGcOhbR5SV+RvUq9KDWT/8h
0hxX+sjxLkgIJW5AkVJyY7uZvJUOCoIqg8aGjmPxWeBYtEh8kh0BFz3JyvTk
BK8P5RC6H0wUxEBJZ4Wd9BzVm1V9MPhWLXXURnJWUMGeHJPqrWPSWIi3otRt
CZO0ltAAo661enpFwzihiSwfo0x1VqK4bM3pLrVG/DQpTRwkKoA50NpWEalO
hj9048hl1XMyH/7sH8G0ZMkSH1K8Bm7x/BEgAGWk7/k6nm5oX4ZF5c6n/Soh
ar8St0JtqOEYilGp2gDDWsWFrHbYJ8vU0Ai0goZr46ZG4iM5IoJOb5XxRAGN
J9MAmjOPMT/BU8JAYCHsB79FjQH0yhXRNS03a/P4rIEFMhVMwmpAKbzsT6sh
VheQsLMqwQFtPcfQSgqsgd0h0rFMASCIctZsNXkMkMeOHRu7ipgSeoNRKz7w
DhQXhAw5wg9cqSO4h32XrPiALYbVrclYaDKX9ZMxLkls0C+uuyHYjHdDUdA0
Z3/ACjgRRnDHPhnyUS+2uqIHKiZRO3q3vqFHDLmqmyDSDf21yJP8dBzWDRCr
zes0GGhoso0HOE5z0+U3GlerydImKqjiZx2gJ+fPnx/DFV3g7JiM7DE3RSyc
vTSWaHfqmjkla6fTeLyWpwgYyZpbovN6qcIZBjFfNcZTrPMQSu5sLl5naD4v
VyVDd6PPCbnq4R0mDsZVUscr3f3IjSMURAgqDebwe6vBJ5V29YyvojVb9O41
x9CurIR7fZMMgYKJTeII4QOjSyJ96PMHitovr5GL+nQcysZJ4Wovhj/8Fxv4
VH+xRlPbOFxzzqsOkRna3FGt5gihSIze+Xc3mkMjLEkne5snaJyVDRkyRA1t
nDc1tM1mmickNbRMNAKb54fuK9AJsse9wC/qpMlAhgw0+YWchOSVep8KdNlQ
AcawM1H8ZWsU1bC1q9PUyCMdTe0q8MCCWAR9xj7xdT7WH9K1tct/DEl3tXiR
7qhuv9wIC0Gy+x4NkarMig/REjBF8A9Wr16tS2Ao2MFyaZ2Zggn4qahzmacN
MfSMPnL03zhO8HP+ov3/ZVoircCSFjYZNtGP3TTYgKgMg4CUniUnpon21igW
anATUcMFCxaktPQb6hwN4qVmRAf+gK+JLiSeAuijhDiE/Q+3Erxyso6NgKl5
JelKcvwLZDmBMsbbMLcYglR8U8EAkgwxRVuOgs1ofSwBnSlt8oYXDE8QgMZT
aJ5JYX5SlC90YAxDj7GGw7LXoIpvkEBuvkONMgBTRoGa+fgZFRzhu763CqxC
7+W7EIq+F4NBA6D+e0EXRkBkyTey4wAk3AlQo4InZuPmdwh91okQhtkJKPy3
/d7+VgcSEeFMDEGD0cTeMchZN58xTOA2LHAEph4xQcSQDmqVAARGg34XJwzl
gCBB/uAfw1Y/cd+FcsE0aOG9rFG/CwyQB+yRQAtsDYyHOwqBBIAJTOU8Ajzx
aOr9LBsSUscuY2psPhQFFgP/V+8e/jM+sCvX2NBjqWQwUE+z/UowiCaNifrG
ePIAHs8V253QVIH76ZdEUURzaJK8zaFRNuOdZ8gjPbLyCUKLLbR1QIIhUSzE
UPnL/MZJ+KV7Kctiq4SACTqgzKFx8DvUjSHgyNd0DLSCmAWPP/fm8cfgJjIv
XsVoR5ssGaWCs8+/0O1P3TIVPAQM+D7/N0s/IBMpbC4UftKTIVXNbFQvp4XC
Y//sxoGk0HwavtP5CK0mwzGaX4BzI/Gf6NZwSs9xMd/ciXm1c4t0OcyoUpwu
RLHpjuHsCD2KC112Zz4olSQonc8vxaHzcTSn86UX/E7mgv1rfckoW8RW0Th8
4uSJLuOSJVPARBJy/tGlzpftxFlvsKQX/G7mgrMlyeqdQH1B6ChYUQgh64KR
GKGIruYC6nwQbDLlhPdq/maWBTexEjR5tgSECMNpkkW2lCgk9nfdmNAZFQYY
brHOg6GVnAfRB+lVW2ADtzPODZI069/71QAVp0tJyPMCvR7n371Onhpp7JEr
7DpfyO5mUxpSrUazumCCzcmTACZiE4zQF3CzoqaTAF2wVooNVevw58OcDJGK
pnNlXTACNFTzQFOA9AXY1CEmU8dBF4zQDTEtUsCfDwkQStcgql/jgkO51/5C
WuZYiFZT0AWTOBfidl2IzqdJzcn59KAz64LdaX01VCfrxqCiQoVZ9KxKF0wy
R8gn1PivzofaCqVewIg1Lhj7KUSbqs71BVptMLlgnE1/wRzqhWhTi/DofOjk
ZBo682neUtYFk9YeWjBGmv+CmuQuclIXHEoWYxwxHn8+PVsOyd1oRHo+jHrz
12zCBmbNj+vt54gD3R9nAscb44uhjWmuki4EqyhZdYoFY5RxZKEbCyWXM05L
LfqASkqxNq62XjpFq0B+8YtfSLoov/643n4u0Ah0aGOhmg98TkIYGyPbDTGM
J91Y6J5tm2o1JCJAZcs9A1C6sUMOOcRu57DDDkvdIX/5y1+M2XfSSSdJ8+bN
7fMf/OAHd9nHBfL73/9e/vjHP9pPOvRHP/qRHdakSRM54YQT7nRDjz/+ePnl
L38pJ554Yuow9+wPf/iDtGrVyn46yD3jM8/51Mw9+853vmOnHDRoUOpn+QFT
zQQfmKG7PlCOD8zQwW82YIbYCf/KB+Zvf/tbu3ROJu90z3784x/bZ0jdu7z3
KmXf4Z5haTDu+9//fjwOJa45lId5MCDniU8HeevTK4LqqoDELGAMlaCrDbMB
WgzwXMyWmcWandnUGkyC0azHgScKpRnQ2OcXXnihQgjzRS0JHYryZti3v/1t
BJciQmNgIEyBiTWFNvKBiSOmdaQUmNBzFmAiekPAzKx0EuWpEU1LAhMa8ovm
ZDOFk8jBFE5mY2pygy+5QsDEQUJRH3744dhrCiHIDUHMGcOdbiixVIZxCGq2
oENxcIE9b1JgYl+4KwkxMPmsRbTyACaMnK9CDm0esS2eQgY5IWBq0l8uhazG
bAiYSoLYd1qaVJkZaiUxAfD449yfWDigV4lo+89qAA/OaShdPLMAUkTCNdkX
Ch6WGGJcvVKv8xFjqOlqagg8PlHxHuIO+kzBA93rM/gjCTLAowlbeYAHg7km
91i3Q7glmfre2st/zGUwc0boz4e7nYzC++57bcEDNWEf0NwiF3jwuAkbKRO6
EFEGE/KZ53kyYbZoBOeF/raz+Sea4adgzOZPZNZNjMBdk+OVLxgVPHCFeoXK
mCEwIkzw/X3FgEqDi3wwEjjUJM48wAjEQ1XSiH6CMd02ywkxtcYyFYx+1kyS
qf35QjLUj1HWFowckKpxkQuMcJAPRrKRQ/pVi93mAUaW5MpnZQRGcEdIQtZt
I7NC22aZPhiZL1kVRfPF/UALTmvojEDz9OsCRk3WzgVGErp8MEIKITAqidQA
Rg2A6XG2H7jS6zQauPJyZuMxWupJA2DJe2Sar8g9Mp0neXNTa+txAtSwlmCr
buBlB1s9WneK3WymcmbafTo9OOSX4nFooBP5ETJI1IHfz9tiyH3Tu3X5gjG7
aRcGYz3bdQpGDhhCF8QyL41EIf9QvVE9GlAwcpARGhcKmIdUlN6Wry0Yfbsu
l2bOw65T8JDYGUrxx0hJF5du4pcliJlPb0howjiUmLxVpRHo9GFF+NIooOLW
ZKM6gqWe7DnFSsg9948n9KAoFNnV2Amxbj14Col05tOLczofAdWkfaixE/ze
2oJnN9lz/qFqMjyqoh3KaeYtKXTarTaPgpGDzSR4VMRz5dhvsJRsJ4IGVdmZ
Lxjrw54jbFZHe66mZAXAg43nd0dBhLpbXxlgxPnHwNCSKaEkBM3K4FhK5wPT
rnpSxnwwebofzR5vzzXytqNxED/nF/kENowrrik9iDJWBd8lUnpceeA4kxhc
JhOF2riaN5gP5q06K3slDEwUKzCrn3eyh9t2inkiC5k5cc3iLBzCAKSXcHhD
uodrhFktr5WzcJbq33HGPozn1A5dnNERFNIJwaVLKMwoD4V+QZDVFpa7yeDT
ZSJgUIPpfNLqTfdcgpSfSE2eFMdXZqWa8QmP4c4mZ9JZapjJ7atpnqBLGnkI
4doaeVhKSSOPeG0eRp6mvBOhRA27uxXNPTZkY5yLmjf/yI0mPkrMOzAa+iQX
2qynWS1BUM8GWvT6A6xFgCzUinNe3pufLRhTCc84MDBmfZwuSBjE1VJLaR/a
XHPAXBMmTGhRRyjUkz2mt7YI+BCMISqKGMAIQO6ARtxxNBI+JOe2Zjn/5b7G
gbp2Eg59TfsnsxLztf1qudnaWFe4WfVkXUXObmOrebCIcHEwRAklG979RZZf
M7N3o20Pt33OquUyd5NtUZdl7gZ9Xdtl7iZVmO8yd7Paqe0y61k11PX19SST
a/t6lZKU36itlESk1VFK1pbkkXOaLVNfck6vP++Tc/vk3K6Sc0A+HzmnaZb7
5Nw+ObdPzu2Tc/vk3D45t9vkHM/rmeT3IjmXrwDZJ+f+juQc5/t1kXPIs31y
bp+c2yfn9sm5vJa5B8g5MjvqS865Zhj75NzukHMcne2Tc/vk3D45V2c5Bx3v
k3O7Sc6RKFAXOYew2APlHOnO++TcPjm3N8g55Nk+ObcL5Rwp1/Ul51zloj1F
zpGevU/O7aVyLt9Tnd0o52ChfXJun5zbJ+f2ybk6LXMvk3NLly6tNzlHqm49
L3OfnPs/Kue03NYeIkD2ybkdkXNJrbGHyjmuau6Tc/Ug5/SaAleMYWaKe+g1
BTPdUXXAYb5ikPsKvhiErOooBvUGCkVsYSBqXnB1hOt9XCPhSglFi7ndRqUD
lmiWrbcsuL6DUKaEcAP7Myqlp+jTu4lQHl/l2s6B3jjtfFuXCiS7QRo3czgH
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
mrJGXn59olxu1L89cAkdxDhL7ILL+slDT46WoSOW2oOY/XYdsCLLqSV6x55N
4R6QX66XorQrpMZx2D7kx3m0WZ6GZghvk9ylLQD5ak2QOsN9b9OmEnuT6ZEn
c5+T8Jxkr5ffmCQTDXSLi8vjuXfUZkVc1pPNup8boHzNEpADxCtRXUTIyLXj
tPlgR6p8JhcAp4vfs0Tz+hDk/ua+smLVVunRZ57cfm+O449e0s74V527zpL5
C6NEocYBoO2Bt+vPdjRSVlYps+cWSsf3p8k1OY4jeH6OkfV3PzBCBgxeiM+e
Yd3uwds9z2132/Yy+WrcSnnmxfFyaa6Qv9nuxW37y5PPj5XRY1cQIIoju6S9
cMzpC4A9aLsXuu0WFhbZfCgS+s9r3TfK2zDy0uiTWLf89YLoygoWKKHHju9N
k2kz18qUKdPNsst2s90T2t3FbneErBct2SRdDPvdFEyKyAxZX3Z1D/mk+yxZ
sjQKWd/u5kaWkYrA9d76MjroDV+HrbV2WyMezL2hV9+anL61EVByJ5zeWU7+
W1frKz/w2Cj5fNgSGw9u7+beBTVkLndL3rylVIYZHfv4M1/JRZf3i7UKrBUZ
3c3kL2d2MRjp4cVRu0vrqz+1qcZEV4qKylM377qlX2mfRcHH3v3m2wuB58RX
Anrub1ddEK+aTw2yBCSx3ubOL7Q3MW/w6KquOpKUpjrqyNBOr3ZI0sjgux9O
twf3fmSweWC7DQMqwEYLvauTekl6D5J/17ntGnqScRNX2Tg9N47T4r6n+W31
7TYJ3Yc0tAxNj3D3Ia/d87Z7g9uuMW/tvS0kARLhVM/gaxjYbvMsEbU3iKi5
W4tX7XnbvcltF5tj6fLN8nGPOXLLXUPjKBbE3CCw3f0DkS1uEH7SI7pBiPl2
hbfdPUTd3WqfNbWhJOptgJ2rbhhkHUK2cdJfO7PFb4Uu8xlr7b6HR9qQKpf5
2niSaQ/ReLc7ZNoLdKOX2Qt0f7vgE7P8bjUev116ZX97c46YDTfnLnFz7wK1
EU3R2NDHZOnee5bcU0MMxKmIq28cbGXurDlRDOTCXbfaaDiuaJXMmjUTm87G
HOxNK6O1uOngqYFkyOFUd9HqtnuHSW970cqGHM7zKGkP0XGhQkeaAlCsd5pe
505TFDQ4rcagQV93p2mpYeXi+F7mHiQFQ9vVJNdvuF9kTMGHjedP/CMfz5/7
RZOmrrb3i87aO7bbzDHi8pVbpLt/rye7u35D+yHSxd7rieT9X/eOneqdPtz1
WXMKbe0lbqdmP07oGR8nkMw/4LOvZc3abfHdvD1IvYW2qxficddHf7XCuOvj
bJC+5gy9HsT85ekXxsmYcStk69bS1MmelKqrvkOvJfUdUquO+i603W+77a4v
3C6fGne9g1HZ56UViueuN7HuukbWqcL19vvT7FUpqnCd6ObeTZVD9XJqpXdZ
AfuqZr+8t9xqbDeibaSfoR9a7d5t6FUqfPApNuN/kk06zJXxHxWPGi1fuOJR
x3rEh4rk9LG+VCTP64n4DnTb3exl1V+UR1Y9/pTNqp+02vrtR3uiZQ+WpFGG
gJ/hbnz+WmS4G//+iL1jp//mEIvPP3f+Bptxft0tn9kt1RjidaWR+g+MMs7/
vHds99/ddvH5x05YaZyDPLK6z47qHZHzN8r492R1/8nb7h6sIv/TbXfDRs2c
dj7/2dnYNl2ViGQErUr0ezf3Hq4itcgVz4jffmxsuFvuHGr1Rzbdgt4hTblr
rzmyaElk7/3Wzb2bdMvP3Dbw5afNXCevv51vVZ7MfN+Dd+82omTvqOoNGW7w
z8Vt+zVAMaRyVb3pbtmSRLqxE6LUWaWZPVxTRjcNGmNI21TJPHJVsdHJVZ1t
K8hUxlnye7gsPdiRaQUVWRZutFtol0gk1e3GYWGqsRhlShYvhRaox/WzvWO7
h7jtFsdJnhOjJM8cUYILL3NJnkQJNhXHKeB7+Hb/4Lb7zTeZVUhO9U5sslUh
ea3jZJk8dY1NtvxPb7t7sKb8o9su9SCIXkVJj0PTkYIsquOG24bESY9cbPyR
m7s2mpICNPloytWrV9d6u9OmBLd7mNsuoQLNPLy6xszDdKjgXpd5uGbdtvi+
xU5RMQ3jbYy9+w2RJRvuCOzkCDd027Yya509ZTz7S6/MkdXXK53V1zbK6rPB
gG2l8V22nbKhxvJbV3Nh1I/bSMVRT0np0wOlctH6UM3xox2KSKLrXz2JLoMB
fX+fqP87H0yXmbOiKLJeuM5Xb0KRI0aMqF+92TS985+1lfLfPCjbf3G3bD/i
MSl9YoBUfr3u1gAEjnUQIFQAf+FeJZPfQqGC9vcMlZ428W2z3YUWz9itErd5
JgQOeUi2//Z+2X7wfREkDjeQeKy/VC5Yc3MAEsc7SJSQ1mYEKwlYl9v6AjWn
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
0vV2YGZkIG3Ycl5QJgFmfmW8XyPi+d9a+l3J+n1C9OMtoA9Y8q/T8qw+dGjL
NLrUZ6dXc6q/fkcJ/a6y9JsNydOs3yNYvw+L7JbtGJJWWvRnUsnxpWoo+Lfv
MpWRkj/y3ExyrgSNrNyaEVwfoH9AiR7lsdhzeTRyzFYOk3aakZQlepPpBPwp
YMzeBGRtLNpaIwP5PyjRoxEvirbSGvpc2O95zrdp88nhjDuWUbo3K8oSvYc4
eZLKLYXPkQmvtzmUms8KHy/7Ux8yRK9r6a216OPSZSMC2PF+olcMPk02u1Jm
TdquD9k8pA74aOBhyszMoxOns0V02quvZ6Eyi/96GyDztgVkkgSQ6WBIvxGB
zB+V9NGEhG7svfSdpfjLcj+hAzsn0/n+2ynnMU/yy17xY1nxk8ndJUslwHLl
TLV9rPglNVYrhSn9tlr61v7Lb2un+j0xTTAnwOt56QdKH+IqKhLZWfEPKpoA
JRhzyTizCeQd0FRjGXEWvow14Jn3FZ4JjZB4Rk+ia+QT+Yv61OjKi6TNtJqG
CAcwt/ot2nh2KIXPWoy8mV3arLXftTjlfS2QOnszX22bEamzAD1txjyY9vpg
sAxx/C5RxPA7GHMJCWhBWUXW4OnaDgaLkGrrZ2ymrBSQJ8D71xNDqMcHZibN
Hux88hmDncWnRKEPYKe1cSpwPo10KjdY96RctKruoWl8T96nWfQaLS34iF9y
AsUN3mqm2Rp2T0SurUDm2gprrNEz8M0Yk5ifn++ZAp2YK9fZddY8YzsyyxS5
GySzyJoCXR/o18eB/DnAuTwI+WdaRomIY0Em9JT5fPy1T4vDcgsR1Vi86UYG
/Teq48inFD6MjXxJBgssOsf9Fq0/P4RC5y2klDfs82/et+MS344MSWXB7XhN
5d/OVon8m918DWsIMxjK3+0XZItauUXdJovn1KRdsaYA14dHH1cGALAftTzA
H1BVEPoaVVY7tDR0ZCBtBFpKk2ipw9VL+p/KVKODKkF1qWrFX1z8Ie059C3F
foFcm1d/YJs6dT/bk27rx7q/lXU/r8YaO2MK2xqTjKVmrNeS+1mLsLtMJKea
gf9UA4WtZ3cwemdwlCsylyikmi0OvuAIFI03GByNZnC0a2+8AEftr17S/1Y6
jbbAcNogmqaETlMPWhc/iIIXz6Wkt+0TarXqtE6oiY0jMqGmU+Im/LcmE2si
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
+jxFX0EtvR/6PLF0aM8ZxvlOazBKA7F7Y5+nvmzx8fE0aNAgcT+bGWvS/7+9
8w+OqrrieMqGRMbidMYp099q1doqCP0xnXHa2s60att/Om3/KDOKVMWCkRFQ
EEFAkKAQSwtSHbFJw2+QwZbfmKoIqaAJEmElIhGZtlAktlAMIZUf4fZ+zr3n
7XtvXzY/bW3dnclm9+3dd8/ec+453/Pj3qvHZ/N/2LBh/jN36jrXOHnZclKz
jl13KaKM/pLXysT5yCkR56u2E2Dl88bMbxvMRB2yGKdn+iN/gY5EZtDyREDf
dSU06hJkuxeOOSDVzMiyyOeEWySni0IHxRjNRgA/twJjvV7r8AWJ2Q66HD3N
aJUzFszBaO6XknZ9AgU9YsQIUdj0N3XqVDNmzBi5DuNT/p605b4WLhR0luu5
3KLMgQEuOCnw6qCHV1vdYSkCr9pxKnPBK44N3Z528TkCkRZeaT1I2C36kXKY
ZZBPbpFlQFmHoCuHb60wZ56tp5I7wKw9wM0NGzaIHrWjbdvx7NqBiBg9FRxg
Nhxm2gqHegmz+oiq2rdvn25lIh2//fbbcuO77747xP6UzOU777zTNDQ0BDVF
PeW/fdWzVOGVJNv2OqQr8GplB+FVZcYCa7aNeDWJUOAVi5glg/me0TEM+28/
VpYeOW5OP7FZAsXZLCXFNsWdkrj5dZRCQY6lBp1lKfh6+PDhZuTIkbYdzymZ
cIDdzImdrl18IsOhkpISs3Xr1oBDBw8eNKWlpRnW+3453966P8GGsz3lX7pI
3kclYSQ5vzc9jNoUVJ22bXvbgFFLnDanUgAzXv+W88Sb/2V0NPAvQQVt+Zd6
Xti5w/+U1EnL9Y9InVyEsXr85e3+ENKzrcFWRR30LzvLbBT8gQMHINW24zkl
75mCxmSqdJqamsyECRMwpe5+Otktp41/BBx/5513RD3TWDmODa6trfWj0DGO
d9TbvdZzHLQlay4OGPOcz0wSOW8PbS1sG21xC9bVEPQiOo1QcX6wVtK0nLTo
OYe320/ZztYw7L7zvQzb+2oBk558yjYxIxaas3/aJ5DueEuz+WMGm3aD2xrO
ZxDjU5b3ixcvlhba1d69e80dd9zhtXrGRnM/tHpnGdie5/Ndr3wFRZEt/Ysx
WxVFrXYoasaCXCiqb6I9RWmzImrDNreVP4G5w40nzRPzy405l+zMfkI5dvCo
OT2nKtiN6uSg8LHXmRODT41cYo5V1ZnnNz/fA5z6bGgUZ8+eHWmHcgXp2OkV
nISKK+o5Kn+gHjhnVUWPc+n7nkth1LPtNVe9iomjmjU36rkwKwIBl2YvbTUP
//Zv1kS2StEh2R8WHOI0Uf1JNA+TSULCalxZA8wc1KOBw97qp5R7f/2H20vs
OzPdfPtynHuTpVTlrZ/MMq0cWp5xDXqAe42NjWb06NECccLtADsm8MFSMrJw
LDzPaAf4oUVhJznYnluqe8i3akWRxZc79rqicPK/7YOcVKik6FyBK4TpF+a0
cJRIBaVbaFAkg4wo4V2SJZhigBBeDbXtYFxOVhYON2c4bH/eZf4nhN3Xz3gG
t7JZ3CObHIP7RxlM4UzjJaMzp9Jv348tzbGqrLMMxpIlOTE1NTURBuOMR8ym
v9+cOXPEb+sogzvqjv7U9/6ur3d61WMfGEBhqGKf6VFL+GnPW3aI0t1CivzK
qYe07im0dkqNaaQGuzLE/yXOl1H+E5snBEXSrarG83+vC0cR6QJLwX/IxojL
dhbnMpuHh93az6kAHHB7MrZc+3Aww8/3FpWqKYQgerL7QoeWT53RUe+2IBRL
JDiufy1klgjwBb7NvHnzIm3Q4/fee68wsbMC0J5nOtgLALPo0N89FNrh1ksp
FNJ4REgA+iUIwIVxAajsuAAAmMkp0yXBZUIZrLLEmyKVRcaUrPzrf3Y5BMwJ
CkkE4L2MAAxQZrMB50PrTMu3HmpDnXuX6JZyF7BqOdWr55iMp8LsVgaCZQk7
WMctANJr167N0gh4UbrvT6qLjG7LXx3iVbmsZT2ayaKxvAHINDsHZPpYArcv
dnumoukvCliteGp6LlYvjbG6ytX8UI0mrN7taoyE1UdcdbCw+qRjNZiPqmGq
XIljXuxZfm5/ozlduta0fHNGoODPS6hNSymKdjkkd0j306/I1rg3/PAHsRrn
jrJeazpw6yZNmpSlwOPpBgxCPN2AyKjL01n2cw0nFxyXxP5bPftPnclgse1g
sWq3wT3Wt73yOPYc0gKk/hn2F0bZX+HLXb+SxX2QAvoE1PD4062i6QmVkK/A
4KBz8JiRBiw/xSWbtjsLgE6iKoxY6ba0W+GDQsBZR2fhAVCqgXXApcNCkLig
guxok4uKgRaQIvLh6Dvq+kkqMyZg1FbjH28eMWdLV5sz3y41pwdMTJnTV99v
R3Pg/cSlBkw0TV8cZ99NsqrEPvcy7105AbX8syfM9ZcO6qb4HDlyRKJYcSC4
cOHCiPg0NDSo+YiIz/r16zslPmGPubq6Wt61vTP8ebKF2FEPBGuoinnRnRkH
S2clr/nROsDpFad1R8mCa8LSw76epZXn1FakuEcvBLG3eyXXSiv9Hn5XBcBR
FQpiBYBEsRA9Q5Shh9gNgIJADIvuUDaA1sXPuLzKU9YNWWUBxtPzD5vfT9ht
1oyvM+vGvWI2jq01Vfe8bJ4bvc28cNdWs6XkObP5lrVm+/Aq89LwZ8xLv3jG
vHz7JlNz+0ZTM2yDqeXvtvVmx23rzGu3bDTXfHJQVw2IigFJKEJocZy/evXq
iBgQKiPBGBeXZcuWdUkM2vPodHN1qQf14bK6BrdwNwwZRRlEEUNBrwQ5+Eak
tNFd0/pvhRHuu17RLMicICF19Szd7xMgjOCP5X7EcChNde4Hy/wrWq0clbfa
V+Vni82M8rP2jmW26eX9r+/mtCXA7g1+ZDpy/lWYX9QIjB07NotfJMvfD36N
8fxiIUqzTy2m33LadIUivGUmiIVMKw+mYoFMN3Hfvp7ApSsVEtjWD5dbuzD/
FBy2z/Yr80/xSt4Vy3Oh+aXl2Beuuq6b44wrk2Q1dZF6OEqZ5EapFY6P8+7d
u4MxfeONN4Qe3unYw0f6Dl+jnX/4DZ0v4GwH2QGRbfaIR5X/4aicY8AuiahJ
ziLkiNK5VjVx9CtjP4slJTPRnfLKTp+rTdlSemDDUftK3vWX50JRdGUU+drZ
Navc9OGFvfxre/mK/jd0c3gRpaTh1Z8eTkAkgRwi/knDu2LFCjts6XTaXrND
LblVJ9ru2q5du8zy5csJNwbXdu7cKe3sZwXj5drHZcep+j1p83p92n5ea5Ys
WWx22fu9uittXqlLm+21afPCi2lTtSVt1j2bNqs2pM3S1WlT/lTazFuUNrOe
TJtpv0mb+3+VNuPK0mb0jLT1GEbNoL9Rpbt5Je+u1mvT7bWpr5pRU3Za28dz
oblnetpcdOk13RzpLVu2JMYDGInwSBPFnzJlSmSkaVdWVhba2DRlBg4cKBQV
8GT06S5576y7iuoVXSOYkEoSwZYxEYKpT3vggQeyCCaXR8xbCR48eLAZMGAA
f5ZWXvF0l7xP6Xz+TxGMbxYnmIQkBJvg8buuEUJ9VxIhTISOsHrmzJnivXeb
kLZmNzMtTAgZqMmTJ7cpc90mhKBXEiEaiVRCTpw4YSZOnJilZohz06LbhMCC
JEK0XEUJOXbsmARg4mabQE0iIUUhQlSOiztJHIUrcYhPuzVr1kSIO3z4cGLs
uLy8PBdxhaJrHnvsMQEvVtKLOkkf2JNqqHi/ixYtitAHlo3nhmi3cuXKXPQV
iRK46aabZBCIqECvBUGFnaQT5o0fPz5LiubOnRuhk9snzVMVhjboLBax1XCd
/kcy9u/fH6i7jhJLO3Lf4XZEj6ZNmybAT4klARWXXNoB/HIQ2zdCrMYfeU+Z
BOaW+AWPjoa6kvJJo0aNwpEN4pkLFizIaoPkNDY2hgitjE4dtNXNN9/su+a5
OCD2wQcfDOAXerq96DsJn6R5XldXJy00+s5eM5Tnhu9HOwbCwuq2iHVFg+BN
X1OkdWZa/4lnzT3iIhink0R60lTRdKvSSYwQhsXbrVq1KsZ9T6eunCYpgg9J
VlCrcMLFMgQgS0pKClI5iMQ8YDDjIsrvtxo7IDIc4NT7odP8I1tE+/jBJAZC
vMNHTsP1WV6Ccuas0Y+5lLomXckAohfC+ot2CJe1xSH6Fjj6tKKQGjpiNNSn
FOcgBMUcd84ZKCwJoh/eotVPo8jAaxFsFiE6wmhgrZEqSiDkIt+OaEDSiIAs
yCmoZUL8LVSPlFDRDlTS3NwcIsQFo3xNdKEojcrKSmls2VSYgxY8YAYgU+pR
KF9DwaG8LA2F/q5I+aOPPqp3DQ+NhqqyKLrAf5efws9O+K5SpCtYduzYIbKV
qQXsI19jLjBCjAh+NpMLm8HEY4T0VzKyFRUVMbDobGCwxSI8RqbjPFZidOd/
4ndakarDo4WJtLf/e/mbJM2HoUOHCkwj0ZChxSmPAB0BNMknhiviw7ToIihW
vxCE4see72nRqlkWM/gUunsscX24hRRFktD2bA5Kp+39L/MfU72G4uZjX2jN
T5YfZcVRa3D1V48bN06KZKIweKnr0hUn9haZ4At8mXGw3fl9afpKTARlzzQD
2mKhvKKV/+jD++67T4YFw8MhjpmOlkc7wmPA+oCb9uzZI4fBuZUPbnUAC0Mw
CBTFWAwgpVFNTU2hGzrgE7pwPH/hw3lBN1BhkRHVf6RviuTZWXlkzYTmJLAM
tU/hnbbje8w3owrxuoQOQOVDhgwRvdvba19mC9JP7llXd6DK8SbcQhbXjtmE
zxU4f0kdgFHUyPQOmWzUJQukwh1gPZnpRSEjg/bJd5DvIN9BvoN8B/kO8h3k
O8h3kO8g38F/vQOCVdoBDkm3O9AvEl0g77tx48aCSyhiL3C5SkKUtuMgutbp
DuSLl/O987p6i6/lv/g+fDHMUSI7xKA+z3OX+RQWVlYSVldXW2Gtr6+31wj5
EOr5YM+G/z+Fke8g30G+g3wH+Q7yHeQ7yHfwYeqAYpcbb7xRkG1vn6r1HZpD
hw5FOqAIxn7mdgyz10jQRKrskjqggod68YqKCtsBzymp9SK9fPz48aADcp6k
wO1ntgPXjvwna35ZSprVgTw+ADmx/80LBR/5N2/PsVo=\
\>"],ExpressionUUID->"a6e04304-fb3d-4ab7-9c33-81bc535137cb"],

Cell[BoxData["\<\"./images/00H.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7643413471461*^9, 3.7643413811955023`*^9, 3.764343707314969*^9, {
   3.764344004629209*^9, 3.764344015330132*^9}, 3.764344049328557*^9, {
   3.764344083302938*^9, 3.764344111889592*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"189c584d-b50c-446e-bf66-b44c662e9937"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Homing 2", "Chapter",
 CellChangeTimes->{{3.763912163950082*^9, 
  3.763912167567306*^9}},ExpressionUUID->"2f955af1-b543-4a87-af3e-\
8185d1f7c63f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ix", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"steady", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"probe", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"data", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                  ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                  ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
            ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"probe", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"probe", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
           "Transpose"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ix"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"labels", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<H\>\"", ",", "\"\<G\>\"", ",", "\"\<C \[Intersection] G\>\"", 
         ",", " ", "\"\<C \[Union] G\>\"", ",", " ", "\"\<SS\>\""}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"hSamples", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"steady", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
          "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lp1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "<", "2"}], ",", 
           RowBox[{"steady", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", "2"}], ",", 
              RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], ",", 
           RowBox[{"steady", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"3", ";;", "All"}], ",", 
              RowBox[{"2", ";;", "All"}]}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
         
         RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
         RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
              "None"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".2", ",", "\"\<0.2\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}]}], "}"}], ",", 
              "None"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "60", "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]",
          ",", 
         RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
         
         RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"labels", "[", 
             RowBox[{"[", 
              RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "None"}], 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{
           "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", ",", 
            "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
            "\"\<tGDX Cross\>\""}], "}"}], "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".5", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
          ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", ".015", "]"}], ",", 
               RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], "&"}], 
            "/@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"j", "<", "3"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"5", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Prolog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Thickness", "[", ".001", "]"}], ",", 
            RowBox[{"Opacity", "[", ".5", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
              "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{";", "\[IndentingNewLine]", 
       RowBox[{"lp2", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "#", "}"}], "&"}], "/@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "3"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"steady", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"3", ";;", "All"}], ",", "1"}], "]"}], "]"}]}], 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"GridLines", "\[Rule]", "Automatic"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
          
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"labels", "[", 
              RowBox[{"[", 
               RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", ".025", "]"}], ",", 
                RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], 
              "&"}], "/@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "<", "3"}], ",", 
               RowBox[{"colors", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
               RowBox[{"colors", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "6"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Prolog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
               "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"lp", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<./images/01H_\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
         "lp", ",", 
         RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "*)"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", "5"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.763912261790709*^9, 3.763912267292963*^9}, {
   3.7639127326554413`*^9, 3.763912733125846*^9}, {3.763912856751981*^9, 
   3.7639128572521477`*^9}, {3.763912892347139*^9, 3.763912917133585*^9}, {
   3.763912954141934*^9, 3.7639129565539103`*^9}, {3.7643411566660433`*^9, 
   3.7643411619402742`*^9}, 3.764341242171095*^9, {3.764344717635323*^9, 
   3.7643447260550537`*^9}, 3.7643471785905*^9, {3.764347267252738*^9, 
   3.764347290698496*^9}, 3.764347336897086*^9, {3.764347427734396*^9, 
   3.764347441135453*^9}, {3.7643490854562817`*^9, 3.7643490859058523`*^9}, {
   3.7643493599914837`*^9, 3.764349398926721*^9}, {3.764349584344901*^9, 
   3.7643495974332933`*^9}, {3.7643496286108427`*^9, 3.76434966623564*^9}, {
   3.7643497081081457`*^9, 3.7643497176790323`*^9}, {3.764350658945915*^9, 
   3.7643506690055113`*^9}, {3.764350755863535*^9, 3.7643507654938087`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"5423cfc2-4016-494d-9535-6337d499a526"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exp", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"out", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"out", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<./images/00Hb.pdf\>\"", ",", "exp", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.764347324869492*^9, 3.7643473327981653`*^9}, {
  3.764350551587532*^9, 3.7643505649450617`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"e0862e53-2c1a-4ed7-9884-fb7aaa402700"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.9490196078431372, 0., 0.3764705882352941], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.5081358821040531}, {0.7, 0.7066967863439655}, {0.9, 
       0.8999830213930445}, {0.95, 0.9491378482804963}, {0.99, 
       0.9893700582813013}, {1., 1.}}]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.4627450980392157, 0.5725490196078431, 1.], PointSize[
      0.012833333333333334`], Thickness[0.015], Opacity[0.8], 
      LineBox[{{0.5, 0.7598180310039186}, {0.7, 0.9130544486638364}, {0.9, 
       0.9896671630904241}, {0.95, 0.9975192866076795}, {0.99, 
       0.9998936223983566}, {1., 1.}}]}}, {}, {}, {}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5025, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Thickness[Large],
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm]}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm]}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm]}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm]}, {1, 
       FormBox["\"1.0\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm]}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm]}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm]}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm]}, {1, 
       FormBox["\"1.0\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive[60],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->750,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"H\"", 100, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.5, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Dashing[{Small, Small}], 
    Thickness[0.001], 
    Opacity[0.5], {
     LineBox[
      NCache[{{
         Rational[31, 100], 0}, {
         Rational[31, 100], 1500}}, {{0.31, 0}, {0.31, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[1, 2], 0}, {
         Rational[1, 2], 1500}}, {{0.5, 0}, {0.5, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[7, 10], 0}, {
         Rational[7, 10], 1500}}, {{0.7, 0}, {0.7, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[9, 10], 0}, {
         Rational[9, 10], 1500}}, {{0.9, 0}, {0.9, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[19, 20], 0}, {
         Rational[19, 20], 1500}}, {{0.95, 0}, {0.95, 1500}}]], 
     LineBox[
      NCache[{{
         Rational[99, 100], 0}, {
         Rational[99, 100], 1500}}, {{0.99, 0}, {0.99, 1500}}]], 
     LineBox[{{1, 0}, {1, 1500}}]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.764347272589525*^9, 3.764347292776226*^9}, 
   3.76434733897305*^9, {3.764349384376677*^9, 3.7643494292925167`*^9}, {
   3.764349589642589*^9, 3.764349600844455*^9}, 3.764349656561927*^9, {
   3.764349712212244*^9, 3.764349724866646*^9}, {3.764350552361747*^9, 
   3.7643505653965483`*^9}, {3.764350663327318*^9, 3.764350674012735*^9}, {
   3.764350757905254*^9, 3.764350766975*^9}},
 CellLabel->"Out[170]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
rtTIhXnkrrJ18N7LZOtIUTXyHRPO9X3plSQ4/H4y0AEVrQ0ZacNJvXhocHcj
lW0FZ2/zKixEqvuF20nFeO+k9YkrgzYnVDu8G3o0lxZQ3XCRVnkORBSaaCoW
GeVWUmAr7YHEP2Ta8Nr1It/YfL3WxJjIK0svGL7aFeYGAqFM5sYAN0A2P1Pg
sBB8QJriMZOeJynxI7c1+J18DvYp/84U9etXEAXwJb6CtYJMcwW5EUvahksI
5dIttKcs8zR7bsR2VGSSCO2gyPwSn8yeafbIuR45191e3yPneqbZnaf5JZdz
yLNQznGkeuRcmV8vco4AZbnkHJ//957Mnmn2yLkeOdfdXt8j53qm2Z2n+SWT
c1yXKkXOzZ07t93T7NrbT+Hrx7z4Ste/vpf68RbugtO2x6q2219TbQuWZI4v
wqxS5B3MeuGFF8or72r1dO39i5fW2181b3y6qtv5UtV0qxar8xdnju2uJ7Zv
dtobHKiatzhLLdvsNLVso1NU3e/09G/WVPp0cebo7jr9mnD6VWrZj8/QeydZ
xU56FTexikWZI1eYVdSkVnGyqtvxEtV0w/Oqbd6izOFFVlGqVA1XsdxSNWcV
vcNV7HCxarruOdX2yReZQ4ucY4SuFpRdL3RzVtEnXMX2ehXXPqva5n6R+VeB
VXSKUMyZXb9wdttdpJqueUa1zfk8c0jFZzcgNrurn1Ztsz/PHFRkB3RUkpNr
Xy5J7q3ie/up5s3OHBiu4rcXqqYhT6m2jxdmDuiuMqV3oj5fO+k61fK3a9Wy
jU9RyzY9NVnNj5yEZDVXPKnaZn2W2a+7rqZP1hR6e7xSy5pU852vqrpdrtSr
OjW9qtPtqn5zoWq8XK/qo88yg7rrqtJ2qL0Y0EupxfWq+a5XVf2f9eo2MavL
5Czv1xeoxsueUG0zF2T2LrK8iimE9PJqZHlLGlTzPa+r+r8Myb+8bS9QTYMf
V60z5mf2LCInOqop0AjlMs/18nq3Y3nLfnW+arzkMdU6fX5m9wLL64L4gdSv
qqV62ve+oer/epXeiHri0Tlf/Kie86eZf1R2zlKSrJbpOd8/RtX/7eo8c95G
z/miR1TrtE8zuxbZRhVTN+m1DZBttKxRr+1NVb/r1WwhVhdso5PVsl+epxov
eFi1fjgveVY3l3EDZXl1enkjCi1Pc+8Xennnj1atH8zL/GXFWN5X/OU9OFbV
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
a6EK5H2TwvWSoANDu/uP2u6+7WUD1PTXIisEhqCUFXJey7RCX+pQ5651StLg
zZQPvOH6W2aTLwNDE/33gy3cy/zFyU2pbqfC0hpBriO1kFo6wUtz+CZHCGcx
9wuXHqmYIpPbQET2Tc+i/xcJ03l3wZsufwIb2OWjKqbFVpFpv2vDdHU5sazg
AumFjxjP4vcFpt2N1NaqbnltH84zUzeeuXOmci8SnW9vb0yd6zK43V5hrS7L
wxXWG4ob1oIGlXOrYOtzTU6Gku0diyyvm4jzNWV5sxdaIL4dE3ilXO9jy7NV
I7W+b81M7qd08+WtJcsDy+vmFyxCTeruvGf7SsGi7cb8myIr7Cbaam1Z4WdL
VdOdr6i6PwlCQ8S6/4nzSyjXaWndtsAKY9oKrVQBbSWVYQb/gAvi/3dVcS9g
I6+zMd1qm1q2KbLaTlZecr/FXGV9cKzJWuTc/ghcmEE32fRtY/Mvun7yosK0
WkmurrRxtcrcPbrOv9iRzju7Ll20i6pvSi52LK8W4/NOEBSixdaTFXL9iMs5
XOzI45f4TVKWNria2m6vyH7gVphcMjgov19CMsD4JV/UuaLoikj6t94qfXk/
lOVJZTNFv9nCvqhfciv5gCWusL0LV9grWeGtw95UCxYZVyPJjhVb6cbuGYTN
TFt6rzAsxznZ+VLVdL3NH/y4yDJDhcbJXC6FVpss88iz31TXPqDUiGeVmviB
UsvqVebYyHJjCm4zWS7OCjVZsYIXH/oM/K3Znyf3RrpMu/VLlnvMuW+qIfcr
delQ/ecupW54UKmn3lDqo0/M5aSjCqzcVxmbu5WbUh86g8aqKXzgH1ISM+Yn
90mWW1nUpFZ01f2qSl1+D4fssruVukQvTv+m7npcqTf0Az9foo4ocWFbyMJM
77tR5lK39YhOywUiAdbh3NHmkvzGnbawXm5hcAuuXTNcqVFaM7w3U2vfJnVo
gYX5evKnbmFtZJPJUkoTkZgvJFeQp8xJbo/kU5JIllBJStvbDinJHALUGgLU
JpwdrP9/62ilXtBa/JPPjFR12eXiuvRnQoWZn9kkzXYRtExxmdwNyZYJH7kZ
dqEizaFCP7cNBt9lqXDlvUrdr6XdBG0vL61TBxchgEjoLYUAcz63eNo7hU5V
bhKEYnTVptYrQoOy66IcGqwkR8EJr+u13H78NaVmzNHCq1kdUCINthIagCZ7
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
EZlILoZLkOBS1DcqaXZUzIxfQzjkI+XmvTDi8JpoOt7atqPHoZJhPXqZxIfE
nARRoI9HQhAbyEO98cYb33Ff4RIcB8mDaHFfyaIA8H/sQIqZYinFQ9yulzSw
lOk5U6C/IW+1T179WyQ1PMqmhue41PBhJdL5m0Lnz5aqZvB6d8mD17uxvd9R
TwPx59/j7tb27aOzXfzK5kAQYMV8QxIJCIdsUUkNQlR+R0JR80QMbl33DCq/
uJcNP2Qf53sG/+diDsaD9o2TmkqfCf9yG13yus/mQthoxuZyonck13svuV6L
ayO58mJukkhYAx5VKqRw0q34Ftvzt7H5t+4xZfaaLMH6m1QuhWdEgojJcd2M
iDpBU8rBqB5G6JJlWt99B41FZRABWFxg+Q5RIWwIGAtlcF1XijDmMHc6DLLN
DIdskw2w9o7wpG+IdmMyvrNNxleS4sW8nrXdaw0Q1MhxITpyNirug0BNMADD
v3aPK7PjI5e3/QqfTSOfyTifiEe61ZBffW1SDm5MdYSI/WNYMo9YvawfI8iD
xSzb7wgdBah57xu9Ow6n52QXdr/OXGmhvYoAqnUBevvR7ksm/Qmwyqs594uF
OJmVY2lQvSkn2zToASUSRuC3Cf42Pw2c0s0F4ZT+drURDDRm+WXXEeY4N0ty
jOO9HOM52lS+ZGhrPuARk2P81F7v3dcjSCETWu7cmFr+F99TDVrP5EUdOtWo
KeDlQR3a2iNI2UGD0wSxM7fJutnz29S9j36ibnigJXrLJJas04Tc2z22mIm6
vhCEti/U1APB85MCbV8uU003vaDa5i9xlWVlN1Hzo33zJRuk+HxRvYk6gaAY
vZHqY1+QBfvAZsHklmIxc8XeLtGe1rgZquG4UvBpbKuYn3skKRM4PfEYyZ6C
GUG49M7C9zgvcykkgrCfuhTSP0pc+UaycvBa6CNvWnXn7zbTeJntNvPT8q+c
+GGNOwkGk2GuUk+8XtqFR4Hc1g65RNyLWUebyMrBO/nPSNuwJt/Kt7UNa9qm
zc/Ifa72mEN83uFjkKaQtBZbskyptz+wwL1F8iA3Pmhvjjpg7uRVxcwVwSQ3
vZxpgJwXT0RTaJvzbM+b9+a6EuGKtQXo60lTIp0cCyKfBfEHXHJijIX4ljBz
MX2bYJdPd7gev8mH63Gy6VtOqJu2OZt5FKpADxnJHslF/9EvFg7+S30B46bO
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
LTCCiyPUq50SA/qyfUjux32bA/pmU2LAXHb1CgdzqfvSIuE0PdkHPUoJgvu4
o9SJw932xPQwSBqlcFRCqYOHg1OywGgtjlKnO0qRrYJOJuRq8O86q7Mz4N9z
Als1PUgGgR980kplwuUA46fSK5HKHD5QE/1FayEaZTjhcoTrsrd+v5KDcHXr
TGMyueKVJ1CzzqAyQyTeQn1wTcS4CtT54re4+wBnuIPCoOR2i7OezZKBEesU
yISI/2SrtzWGEbE4iTgoqFKeqR5DpRCaUmZLNUqmilvUGhNX+hc0oakxpAkt
t8fyxHHCF9rT7tmzh1+tbHm0XeHcT1BAnWXLuFL3yHtlnPV/n2rGsdlo2kJ7
HBobUZXfL+pO0xV6lMUVZ88XFMVx9Uy3YskWAalzXJOg2SDxu346s3GG48ze
4JzZhywqP88jT7baCEOFq+2aq0ueSbUnjnKVkNMX59i+foc6AhLlCTNln7B9
aJvid5CjbwFd3lLcshSNazImHe+HOZFkKwK0aPgsTShcHwT9PhrzVATP0SeB
NjzUctI6Lq41wkCYPMItCahKeSE/ycWFFEv642gPzIatVuUesGaDhLxzlbOV
FoHGuH1AM/jyDNtWGEyAtu1I0DmijyX7hcF+N2IYwBbzGYwijGtSC4PBNKc5
fUv3aScwNLsYGunnQqslvTqJz/cHm8fx0oZ4bI5Ns2fZUFurbpVv2eSMaAaW
jd7f9b93lk2js2wOpiwbvxRbFK8DuyWGK10GT7R1qp6GZ1Tn5Vk27Jg55ioV
/BTe5QnjC81PESd6XdF1PNXXqlx6+AQNTei5VBZpB0S/Dc3JuMY9fbMuwow+
39FUwhYm++d5m/1DML8/hll11DDbbnMMXEBW0mTTLQ3LHACrMmaQMPqIrfly
mTB6Sjqjqem3aL0peFjpPitPw6PQjJatSBYcjE41RxsaaGj6d6KxmY++XDQ4
dj25SvyWdXyuhgwlfeV6LuPoAsf1IPQi9uUGZ18u75t9OSu3fSkJC751dKlw
GK/tfU+7G4+ZOOx6QGgOv7Zw3KSnOHrUNv3k0Y6T5vEiOKBtOBw0FRximDXU
qCoa5LpESDMxfSj54BtuuCGtNx5dCHfs2BHbE20gZpxN+nT27hFb+bmA9u4q
395NmjTT4R5HxYq7XDjaesRwi30ZrvjlcZTKIS6/7PTCcRSITYO66667To/j
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
yQVfbo2mTWB+/gNiYv+dT5S86l8MUgHc\
\>"],ExpressionUUID->"9ffea1e1-ccf0-4d6f-b6a2-a590d4856f09"],

Cell[BoxData["\<\"./images/00Hb.pdf\"\>"], "Output",
 CellChangeTimes->{{3.764347272589525*^9, 3.764347292776226*^9}, 
   3.76434733897305*^9, {3.764349384376677*^9, 3.7643494292925167`*^9}, {
   3.764349589642589*^9, 3.764349600844455*^9}, 3.764349656561927*^9, {
   3.764349712212244*^9, 3.764349724866646*^9}, {3.764350552361747*^9, 
   3.7643505653965483`*^9}, {3.764350663327318*^9, 3.764350674012735*^9}, {
   3.764350757905254*^9, 3.76435076916186*^9}},
 CellLabel->
  "Out[171]=",ExpressionUUID->"fdc92e2a-21e2-48db-9a7e-300a7a3912fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Steady State", "Chapter",
 CellChangeTimes->{{3.7634101067524843`*^9, 
  3.763410110807474*^9}},ExpressionUUID->"a18f7aaa-2f84-4619-98d6-\
836947cfa0d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"steady", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"probe", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
         "Transpose"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"hSamples", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
        "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"steady", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", ",", 
          "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
          "\"\<tGDX Cross\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", ".015", "]"}], ",", 
             RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], "&"}], "/@",
           "colors"}], ")"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", ".0025", "]"}], ",", 
          RowBox[{"Opacity", "[", ".5", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", ".025", "]"}], ",", 
             RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], "&"}], "/@",
           "colors"}], ")"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<./images/01SS_\>\"", "<>", 
       RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      "lp"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "6", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763409985031431*^9, 3.7634099970857363`*^9}, {
  3.763734470425083*^9, 3.7637344705060577`*^9}, {3.764340782452485*^9, 
  3.7643407838471937`*^9}, {3.7643408203211327`*^9, 3.76434088411872*^9}, {
  3.764343586159914*^9, 3.7643435922313147`*^9}, {3.7643475271625233`*^9, 
  3.764347544419445*^9}, {3.764347626927318*^9, 3.7643476762357197`*^9}, {
  3.764347742414171*^9, 3.764347819359747*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"c153bb1b-ae7e-4fbc-9a90-6343b0b56e6c"],

Cell[BoxData[
 RowBox[{"{", "\<\"./images/01SS_6.pdf\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.763409991345916*^9, 3.76341002586903*^9, 3.7634100820471354`*^9, 
   3.763493625217072*^9, 3.763734471303137*^9, 3.7643407853073063`*^9, {
   3.7643408268895082`*^9, 3.7643408852589903`*^9}, {3.764343588666504*^9, 
   3.764343618186331*^9}, 3.764347545520802*^9, {3.764347617196607*^9, 
   3.764347677220161*^9}, {3.76434774369093*^9, 3.764347820558326*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"b96ededa-7b53-4b62-a13e-05eab7576a78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ix", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"steady", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"probe", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "i", ",", "h_", ",", "r", ",", "s", ",", "ra_", ",", "rb_", 
                ",", "un_", ",", "in_", ",", "ss_"}], "}"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"h", "/", "100"}], ",", "ra", ",", "rb", ",", "un", 
                ",", "in", ",", "ss"}], "}"}]}]}], "]"}], "//", "Sort"}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"probe", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "j"}], "]"}], "]"}]}], "}"}], "//", 
         "Transpose"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "ix"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"hSamples", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
        "Flatten"}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"steady", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", 
              ",", "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", 
              "\"\<tGDX Cross\>\""}], "}"}], "[", 
            RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "ix"}], ")"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", ".015", "]"}], ",", 
             RowBox[{"Opacity", "[", ".8", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"colors", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "ix"}], ")"}]}], 
         ")"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", ".0025", "]"}], ",", 
          RowBox[{"Opacity", "[", ".5", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"steady", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thick"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "40", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "750"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "100"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", ".025", "]"}], ",", 
             RowBox[{"Opacity", "[", ".75", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"colors", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "ix"}], ")"}]}], 
         ")"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "1500"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
            "hSamples"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"lp1", ",", "lp2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<./images/01SS_\>\"", "<>", 
       RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      "lp"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "6", ",", "6"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.764348506117528*^9, 3.7643485388319073`*^9}, {
  3.7643486561301947`*^9, 3.764348688554873*^9}, {3.764348841552558*^9, 
  3.764348854243711*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"2d673438-933b-418d-a5a6-dc6d91dffc57"],

Cell[BoxData[
 RowBox[{"{", "\<\"./images/01SS_6.pdf\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.76434867064464*^9, 3.7643486908128138`*^9}, 
   3.764348855614009*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"4b5de032-3f03-41f9-af79-63218b0a1921"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Legend", "Chapter",
 CellChangeTimes->{{3.763733757567017*^9, 
  3.76373376015924*^9}},ExpressionUUID->"f847e8ed-717c-4ddb-b94d-\
2ac9cbfd9fb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SwatchLegend", "[", 
  RowBox[{"colors", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<CRISPR\>\"", ",", "\"\<CRISPRX\>\"", ",", "\"\<tGD\>\"", ",", 
     "\"\<tGDX\>\"", ",", "\"\<tGD Cross\>\"", ",", "\"\<tGDX Cross\>\""}], 
    "}"}], ",", 
   RowBox[{"LegendMarkerSize", "\[Rule]", "50"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "50"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<legend.pdf\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763315556927082*^9, 3.7633155592466593`*^9}, {
  3.763315650116475*^9, 3.763315720690551*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"a3422437-92f6-487e-b54c-824753e63757"],

Cell[BoxData[
 TemplateBox[{
  "\"CRISPR\"","\"CRISPRX\"","\"tGD\"","\"tGDX\"","\"tGD Cross\"",
   "\"tGDX Cross\""},
  "SwatchLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.9490196078431372, 0., 0.3764705882352941]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.7764705882352941, 0.8470588235294118, 1.]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.4980392156862745, 1., 0.22745098039215686`]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.4627450980392157, 0.5725490196078431, 1.]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1., 0.08627450980392157, 0.8901960784313725]], 
                RectangleBox[{0, 0}, {50, 50}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {50, 50}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {
    FontSize -> 50, FontFamily -> "Arial"}, Background -> Automatic, 
    StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.9490196078431372, 0., 0.3764705882352941], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[0.6326797385620915, 0., 0.25098039215686274`], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9490196078431372`", ",", "0.`", ",", 
                   "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
             Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.9490196078431372, 0., 0.3764705882352941]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.9490196078431372, 0., 0.3764705882352941], Editable -> 
            False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.10718954248366012`, 0.13333333333333336`, 
                 0.40522875816993464`], FrameTicks -> None, PlotRangePadding -> 
               None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.16078431372549018`", ",", "0.2`", ",", 
                   "0.6078431372549019`"}], "]"}], NumberMarks -> False]], 
             Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.16078431372549018`, 0.2, 0.6078431372549019], Editable -> 
            False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.7764705882352941, 0.8470588235294118, 1.], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.5176470588235295, 0.5647058823529412, 0.6666666666666667], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.7764705882352941`", ",", "0.8470588235294118`", ",", 
                   "1.`"}], "]"}], NumberMarks -> False]], Appearance -> None,
              BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.7764705882352941, 0.8470588235294118, 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.7764705882352941, 0.8470588235294118, 1.], Editable -> 
            False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.4980392156862745, 1., 0.22745098039215686`], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.3320261437908497, 0.6666666666666667, 0.1516339869281046], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.4980392156862745`", ",", "1.`", ",", 
                   "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
             Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.4980392156862745, 1., 0.22745098039215686`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.4980392156862745, 1., 0.22745098039215686`], Editable -> 
            False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.4627450980392157, 0.5725490196078431, 1.], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.3084967320261438, 0.38169934640522873`, 0.6666666666666667],
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.4627450980392157`", ",", "0.5725490196078431`", ",", 
                   "1.`"}], "]"}], NumberMarks -> False]], Appearance -> None,
              BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.4627450980392157, 0.5725490196078431, 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.4627450980392157, 0.5725490196078431, 1.], Editable -> 
            False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[1., 0.08627450980392157, 0.8901960784313725], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.6666666666666667, 0.05751633986928105, 0.5934640522875817], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.08627450980392157`", ",", 
                   "0.8901960784313725`"}], "]"}], NumberMarks -> False]], 
             Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.08627450980392157, 0.8901960784313725]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[1., 0.08627450980392157, 0.8901960784313725], Editable -> 
            False, Selectable -> False]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "50"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "50"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.763315668517097*^9, 3.763315720906192*^9}, 
   3.7634084463269873`*^9, 3.763409177315939*^9, 3.7634095338739853`*^9, 
   3.763410025203964*^9, 3.763410081559031*^9, 3.763493624289899*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"562be54c-a6d9-4513-8a75-b8cf20cae43e"],

Cell[BoxData["\<\"legend.pdf\"\>"], "Output",
 CellChangeTimes->{{3.763315668517097*^9, 3.763315720906192*^9}, 
   3.7634084463269873`*^9, 3.763409177315939*^9, 3.7634095338739853`*^9, 
   3.763410025203964*^9, 3.763410081559031*^9, 3.763493624672442*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"0776e1e7-7ec1-424d-b8a4-da79d369b27f"]
}, Open  ]]
}, Closed]]
},
Evaluator->"Local",
WindowSize->{1191, 1038},
WindowMargins->{{Automatic, 532}, {125, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 864, 24, 52, "Input",ExpressionUUID->"388e5ea2-ba80-408f-b91a-ff646729086b"],
Cell[1447, 48, 11470, 296, 34, "Output",ExpressionUUID->"6093397b-06be-4a69-a66f-18caf78ea820"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12954, 349, 155, 3, 69, "Chapter",ExpressionUUID->"86d3aff0-d1d2-442c-9995-ffda1a220a17"],
Cell[13112, 354, 3019, 70, 115, "Input",ExpressionUUID->"23e9824d-d266-4f86-bdf9-f1c7510345f4"],
Cell[CellGroupData[{
Cell[16156, 428, 11971, 275, 934, "Input",ExpressionUUID->"7f6504ff-ba10-47fe-9224-ee765c8e1e6e"],
Cell[28130, 705, 978, 16, 34, "Output",ExpressionUUID->"c74e185f-9c29-4e9f-906c-8a56149b62dc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29157, 727, 206, 4, 58, "Chapter",ExpressionUUID->"4371b550-26dd-4de5-8361-87c628985fa7"],
Cell[29366, 733, 3019, 70, 115, "Input",ExpressionUUID->"0c2ed0c2-b2cc-4fc4-8aa9-84606d9dfbeb"],
Cell[CellGroupData[{
Cell[32410, 807, 11924, 274, 934, "Input",ExpressionUUID->"990e4515-6e10-42d7-99d3-1a9146a68259"],
Cell[44337, 1083, 1076, 17, 34, "Output",ExpressionUUID->"2d814c8c-2ceb-45d9-8d21-5242e219f680"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45462, 1106, 151, 3, 69, "Chapter",ExpressionUUID->"13ec63fd-048d-4469-a0a1-6dc5392ae229"],
Cell[45616, 1111, 1859, 55, 115, "Input",ExpressionUUID->"b7dafa76-bb3e-4439-a44d-24526d1b687b"],
Cell[47478, 1168, 13492, 303, 955, "Input",ExpressionUUID->"cd08a318-1f1a-4220-9f4e-7b16fdce0b1c"],
Cell[CellGroupData[{
Cell[60995, 1475, 820, 16, 52, "Input",ExpressionUUID->"13226482-fec7-4c00-bc2d-8cf2c56e6fa9"],
Cell[61818, 1493, 84505, 1415, 857, 4509, 103, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a6e04304-fb3d-4ab7-9c33-81bc535137cb"],
Cell[146326, 2910, 341, 5, 34, "Output",ExpressionUUID->"189c584d-b50c-446e-bf66-b44c662e9937"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146716, 2921, 153, 3, 58, "Chapter",ExpressionUUID->"2f955af1-b543-4a87-af3e-8185d1f7c63f"],
Cell[146872, 2926, 12055, 285, 976, "Input",ExpressionUUID->"5423cfc2-4016-494d-9535-6337d499a526"],
Cell[CellGroupData[{
Cell[158952, 3215, 586, 14, 52, "Input",ExpressionUUID->"e0862e53-2c1a-4ed7-9884-fb7aaa402700"],
Cell[159541, 3231, 53292, 903, 857, 3185, 82, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"9ffea1e1-ccf0-4d6f-b6a2-a590d4856f09"],
Cell[212836, 4136, 543, 8, 34, "Output",ExpressionUUID->"fdc92e2a-21e2-48db-9a7e-300a7a3912fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213428, 4150, 159, 3, 69, "Chapter",ExpressionUUID->"a18f7aaa-2f84-4619-98d6-836947cfa0d3"],
Cell[CellGroupData[{
Cell[213612, 4157, 7495, 177, 850, "Input",ExpressionUUID->"c153bb1b-ae7e-4fbc-9a90-6343b0b56e6c"],
Cell[221110, 4336, 538, 8, 34, "Output",ExpressionUUID->"b96ededa-7b53-4b62-a13e-05eab7576a78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221685, 4349, 7879, 195, 871, "Input",ExpressionUUID->"2d673438-933b-418d-a5a6-dc6d91dffc57"],
Cell[229567, 4546, 252, 5, 34, "Output",ExpressionUUID->"4b5de032-3f03-41f9-af79-63218b0a1921"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[229868, 4557, 150, 3, 58, "Chapter",ExpressionUUID->"f847e8ed-717c-4ddb-b94d-2ac9cbfd9fb3"],
Cell[CellGroupData[{
Cell[230043, 4564, 687, 15, 52, "Input",ExpressionUUID->"a3422437-92f6-487e-b54c-824753e63757"],
Cell[230733, 4581, 19155, 396, 492, "Output",ExpressionUUID->"562be54c-a6d9-4513-8a75-b8cf20cae43e"],
Cell[249891, 4979, 338, 5, 34, "Output",ExpressionUUID->"0776e1e7-7ec1-424d-b8a4-da79d369b27f"]
}, Open  ]]
}, Closed]]
}
]
*)

